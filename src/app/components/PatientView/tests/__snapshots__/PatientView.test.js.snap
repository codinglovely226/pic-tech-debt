exports[`PatientView does not render the Age, Circumstance, Occupation, MRN or Risk fields for non-human patients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            id="topic"
                            label={
                                <FormattedMessage
                                    defaultMessage="Topic"
                                    id="pic.components.Patient.field.topic"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="name"
                            label={
                                <FormattedMessage
                                    defaultMessage="Patient Name"
                                    id="pic.components.Patient.field.name"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="sex"
                            label={
                                <FormattedMessage
                                    defaultMessage="Biological Sex"
                                    id="pic.components.Patient.field.sex"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "female",
                                    },
                                    Object {
                                      "label": "male",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Â 
                        </ControlLabel>
                        <FormGroup
                            bsClass="form-group">
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="human">
                                Human
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={true}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="animal">
                                Animal
                            </Radio>
                        </FormGroup>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="animalType"
                            label={
                                <FormattedMessage
                                    defaultMessage="Animal Type"
                                    id="pic.components.Patient.field.animalType"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Dog",
                                    },
                                    Object {
                                      "label": "Cat",
                                    },
                                    Object {
                                      "label": "Horse/pony",
                                    },
                                    Object {
                                      "label": "Cow",
                                    },
                                    Object {
                                      "label": "Sheep",
                                    },
                                    Object {
                                      "label": "Goat",
                                    },
                                    Object {
                                      "label": "Poultry",
                                    },
                                    Object {
                                      "label": "Bird not Poultry",
                                    },
                                    Object {
                                      "label": "Rat/mouse",
                                    },
                                    Object {
                                      "label": "Rabbit",
                                    },
                                    Object {
                                      "label": "Possum",
                                    },
                                    Object {
                                      "label": "Guinea Pig",
                                    },
                                    Object {
                                      "label": "Kangaroo",
                                    },
                                    Object {
                                      "label": "Elephant",
                                    },
                                    Object {
                                      "label": "Camel",
                                    },
                                    Object {
                                      "label": "Pig",
                                    },
                                    Object {
                                      "label": "Marine mammal",
                                    },
                                    Object {
                                      "label": "Lizard",
                                    },
                                    Object {
                                      "label": "Fish",
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="weight"
                            label={
                                <FormattedMessage
                                    defaultMessage="Weight (kg)"
                                    id="pic.components.Patient.field.weight"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            type="number"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Location of Exposure
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                            <Checkbox
                                bsClass="checkbox"
                                disabled={true}
                                inline={true}
                                onChange={[Function]}
                                style={
                                    Object {
                                        "marginLeft": "1rem",
                                      }
                                }
                                title=""
                                value={true}>
                                from Caller
                            </Checkbox>
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="location"
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Location Type"
                                    id="pic.components.Patient.field.location"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "",
                                        },
                                        Object {
                                          "label": "Home",
                                        },
                                        Object {
                                          "label": "Workplace",
                                        },
                                        Object {
                                          "label": "Medical - hospital",
                                        },
                                        Object {
                                          "label": "Medical - non-hospital",
                                        },
                                        Object {
                                          "label": "Veterinary clinic",
                                        },
                                        Object {
                                          "label": "Poisons Centre",
                                        },
                                        Object {
                                          "label": "Educational establishment",
                                        },
                                        Object {
                                          "label": "Enclosed public space",
                                        },
                                        Object {
                                          "label": "Open space",
                                        },
                                        Object {
                                          "label": "Mode of transport",
                                        },
                                        Object {
                                          "label": "Prison",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="city"
                            label="Suburb"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="postcode"
                            label={
                                <FormattedMessage
                                    defaultMessage="Postcode of Exposure"
                                    id="pic.components.Patient.field.postcode"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          id="topic"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Topic"
                                                      id="pic.components.Patient.field.topic"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="name"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Patient Name"
                                                      id="pic.components.Patient.field.name"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="sex"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Biological Sex"
                                                      id="pic.components.Patient.field.sex"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "female",
                                                      },
                                                      Object {
                                                        "label": "male",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Â 
                                    </ControlLabel>
                                    <FormGroup
                                          bsClass="form-group">
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="human">
                                                Human
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={true}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="animal">
                                                Animal
                                          </Radio>
                                    </FormGroup>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="animalType"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Animal Type"
                                                      id="pic.components.Patient.field.animalType"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Dog",
                                                      },
                                                      Object {
                                                        "label": "Cat",
                                                      },
                                                      Object {
                                                        "label": "Horse/pony",
                                                      },
                                                      Object {
                                                        "label": "Cow",
                                                      },
                                                      Object {
                                                        "label": "Sheep",
                                                      },
                                                      Object {
                                                        "label": "Goat",
                                                      },
                                                      Object {
                                                        "label": "Poultry",
                                                      },
                                                      Object {
                                                        "label": "Bird not Poultry",
                                                      },
                                                      Object {
                                                        "label": "Rat/mouse",
                                                      },
                                                      Object {
                                                        "label": "Rabbit",
                                                      },
                                                      Object {
                                                        "label": "Possum",
                                                      },
                                                      Object {
                                                        "label": "Guinea Pig",
                                                      },
                                                      Object {
                                                        "label": "Kangaroo",
                                                      },
                                                      Object {
                                                        "label": "Elephant",
                                                      },
                                                      Object {
                                                        "label": "Camel",
                                                      },
                                                      Object {
                                                        "label": "Pig",
                                                      },
                                                      Object {
                                                        "label": "Marine mammal",
                                                      },
                                                      Object {
                                                        "label": "Lizard",
                                                      },
                                                      Object {
                                                        "label": "Fish",
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="weight"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Weight (kg)"
                                                      id="pic.components.Patient.field.weight"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          type="number"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Location of Exposure
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                          <Checkbox
                                                bsClass="checkbox"
                                                disabled={true}
                                                inline={true}
                                                onChange={[Function]}
                                                style={
                                                      Object {
                                                            "marginLeft": "1rem",
                                                          }
                                                }
                                                title=""
                                                value={true}>
                                                from Caller
                                          </Checkbox>
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="location"
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Location Type"
                                                      id="pic.components.Patient.field.location"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "",
                                                            },
                                                            Object {
                                                              "label": "Home",
                                                            },
                                                            Object {
                                                              "label": "Workplace",
                                                            },
                                                            Object {
                                                              "label": "Medical - hospital",
                                                            },
                                                            Object {
                                                              "label": "Medical - non-hospital",
                                                            },
                                                            Object {
                                                              "label": "Veterinary clinic",
                                                            },
                                                            Object {
                                                              "label": "Poisons Centre",
                                                            },
                                                            Object {
                                                              "label": "Educational establishment",
                                                            },
                                                            Object {
                                                              "label": "Enclosed public space",
                                                            },
                                                            Object {
                                                              "label": "Open space",
                                                            },
                                                            Object {
                                                              "label": "Mode of transport",
                                                            },
                                                            Object {
                                                              "label": "Prison",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="city"
                                          label="Suburb"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="postcode"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Postcode of Exposure"
                                                      id="pic.components.Patient.field.postcode"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <PatientView
        age=""
        ageGroup=""
        ageUnits=""
        ageYears=""
        animalType=""
        category="animal"
        circumstance=""
        currentCase={Object {}}
        executeMacro={[Function]}
        geometry={Object {}}
        interlocutorCity=""
        interlocutorGeometry={Object {}}
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        location=""
        lookupMacroTemplate={[Function]}
        macro=""
        medicalRecordNumber=""
        name=""
        occupation=""
        orgCountry=""
        poisonSeverityScore=""
        postcode=""
        pregnantLactating=""
        pregnantStatus=""
        pregnantTrimester=""
        riskAssessment=""
        sex=""
        suburb=""
        template={Object {}}
        topic=""
        updateAge={[Function]}
        updateAgeGroup={[Function]}
        updateAnimalType={[Function]}
        updateCaseTopic={[Function]}
        updateCategory={[Function]}
        updateCircumstance={[Function]}
        updateGeometry={[Function]}
        updateLocation={[Function]}
        updateLocationFromLookup={[Function]}
        updateMedicalRecordNumber={[Function]}
        updateName={[Function]}
        updateOccupation={[Function]}
        updatePoisonSeverityScore={[Function]}
        updatePostcode={[Function]}
        updatePregnantLactating={[Function]}
        updatePregnantStatus={[Function]}
        updatePregnantTrimester={[Function]}
        updateRiskAssessment={[Function]}
        updateSex={[Function]}
        updateSuburb={[Function]}
        updateTemplateMacro={[Function]}
        updateWeight={[Function]}
        weight=""
        weightUnits="" />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PatientView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "age": "",
          "ageGroup": "",
          "ageUnits": "",
          "ageYears": "",
          "animalType": "",
          "category": "animal",
          "circumstance": "",
          "currentCase": Object {},
          "executeMacro": [Function],
          "geometry": Object {},
          "interlocutorCity": "",
          "interlocutorGeometry": Object {},
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "location": "",
          "lookupMacroTemplate": [Function],
          "macro": "",
          "medicalRecordNumber": "",
          "name": "",
          "occupation": "",
          "orgCountry": "",
          "poisonSeverityScore": "",
          "postcode": "",
          "pregnantLactating": "",
          "pregnantStatus": "",
          "pregnantTrimester": "",
          "riskAssessment": "",
          "sex": "",
          "suburb": "",
          "template": Object {},
          "topic": "",
          "updateAge": [Function],
          "updateAgeGroup": [Function],
          "updateAnimalType": [Function],
          "updateCaseTopic": [Function],
          "updateCategory": [Function],
          "updateCircumstance": [Function],
          "updateGeometry": [Function],
          "updateLocation": [Function],
          "updateLocationFromLookup": [Function],
          "updateMedicalRecordNumber": [Function],
          "updateName": [Function],
          "updateOccupation": [Function],
          "updatePoisonSeverityScore": [Function],
          "updatePostcode": [Function],
          "updatePregnantLactating": [Function],
          "updatePregnantStatus": [Function],
          "updatePregnantTrimester": [Function],
          "updateRiskAssessment": [Function],
          "updateSex": [Function],
          "updateSuburb": [Function],
          "updateTemplateMacro": [Function],
          "updateWeight": [Function],
          "weight": "",
          "weightUnits": "",
        },
        "refs": Object {},
        "state": null,
        "updateLocalityFromCaller": [Function],
        "updateLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={true}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="animalType"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Animal Type"
                                                                                          id="pic.components.Patient.field.animalType"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Dog",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Horse/pony",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cow",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Sheep",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Goat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Bird not Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rat/mouse",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rabbit",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Possum",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Guinea Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Kangaroo",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Elephant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Camel",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Marine mammal",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Lizard",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Fish",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 6,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={true}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="animalType"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Animal Type"
                                                                                          id="pic.components.Patient.field.animalType"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Dog",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Horse/pony",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cow",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Sheep",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Goat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Bird not Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rat/mouse",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rabbit",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Possum",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Guinea Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Kangaroo",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Elephant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Camel",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Marine mammal",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Lizard",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Fish",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PatientView
    age=""
    ageGroup=""
    ageUnits=""
    ageYears=""
    animalType=""
    category="animal"
    circumstance=""
    currentCase={Object {}}
    executeMacro={[Function]}
    geometry={Object {}}
    interlocutorCity=""
    interlocutorGeometry={Object {}}
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    location=""
    lookupMacroTemplate={[Function]}
    macro=""
    medicalRecordNumber=""
    name=""
    occupation=""
    orgCountry=""
    poisonSeverityScore=""
    postcode=""
    pregnantLactating=""
    pregnantStatus=""
    pregnantTrimester=""
    riskAssessment=""
    sex=""
    suburb=""
    template={Object {}}
    topic=""
    updateAge={[Function]}
    updateAgeGroup={[Function]}
    updateAnimalType={[Function]}
    updateCaseTopic={[Function]}
    updateCategory={[Function]}
    updateCircumstance={[Function]}
    updateGeometry={[Function]}
    updateLocation={[Function]}
    updateLocationFromLookup={[Function]}
    updateMedicalRecordNumber={[Function]}
    updateName={[Function]}
    updateOccupation={[Function]}
    updatePoisonSeverityScore={[Function]}
    updatePostcode={[Function]}
    updatePregnantLactating={[Function]}
    updatePregnantStatus={[Function]}
    updatePregnantTrimester={[Function]}
    updateRiskAssessment={[Function]}
    updateSex={[Function]}
    updateSuburb={[Function]}
    updateTemplateMacro={[Function]}
    updateWeight={[Function]}
    weight=""
    weightUnits="" />,
}
`;

exports[`PatientView renders the Animal Type field for non-human patients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            id="topic"
                            label={
                                <FormattedMessage
                                    defaultMessage="Topic"
                                    id="pic.components.Patient.field.topic"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="name"
                            label={
                                <FormattedMessage
                                    defaultMessage="Patient Name"
                                    id="pic.components.Patient.field.name"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="sex"
                            label={
                                <FormattedMessage
                                    defaultMessage="Biological Sex"
                                    id="pic.components.Patient.field.sex"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "female",
                                    },
                                    Object {
                                      "label": "male",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Â 
                        </ControlLabel>
                        <FormGroup
                            bsClass="form-group">
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="human">
                                Human
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={true}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="animal">
                                Animal
                            </Radio>
                        </FormGroup>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="animalType"
                            label={
                                <FormattedMessage
                                    defaultMessage="Animal Type"
                                    id="pic.components.Patient.field.animalType"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Dog",
                                    },
                                    Object {
                                      "label": "Cat",
                                    },
                                    Object {
                                      "label": "Horse/pony",
                                    },
                                    Object {
                                      "label": "Cow",
                                    },
                                    Object {
                                      "label": "Sheep",
                                    },
                                    Object {
                                      "label": "Goat",
                                    },
                                    Object {
                                      "label": "Poultry",
                                    },
                                    Object {
                                      "label": "Bird not Poultry",
                                    },
                                    Object {
                                      "label": "Rat/mouse",
                                    },
                                    Object {
                                      "label": "Rabbit",
                                    },
                                    Object {
                                      "label": "Possum",
                                    },
                                    Object {
                                      "label": "Guinea Pig",
                                    },
                                    Object {
                                      "label": "Kangaroo",
                                    },
                                    Object {
                                      "label": "Elephant",
                                    },
                                    Object {
                                      "label": "Camel",
                                    },
                                    Object {
                                      "label": "Pig",
                                    },
                                    Object {
                                      "label": "Marine mammal",
                                    },
                                    Object {
                                      "label": "Lizard",
                                    },
                                    Object {
                                      "label": "Fish",
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="weight"
                            label={
                                <FormattedMessage
                                    defaultMessage="Weight (kg)"
                                    id="pic.components.Patient.field.weight"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            type="number"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Location of Exposure
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                            <Checkbox
                                bsClass="checkbox"
                                disabled={true}
                                inline={true}
                                onChange={[Function]}
                                style={
                                    Object {
                                        "marginLeft": "1rem",
                                      }
                                }
                                title=""
                                value={true}>
                                from Caller
                            </Checkbox>
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="location"
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Location Type"
                                    id="pic.components.Patient.field.location"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "",
                                        },
                                        Object {
                                          "label": "Home",
                                        },
                                        Object {
                                          "label": "Workplace",
                                        },
                                        Object {
                                          "label": "Medical - hospital",
                                        },
                                        Object {
                                          "label": "Medical - non-hospital",
                                        },
                                        Object {
                                          "label": "Veterinary clinic",
                                        },
                                        Object {
                                          "label": "Poisons Centre",
                                        },
                                        Object {
                                          "label": "Educational establishment",
                                        },
                                        Object {
                                          "label": "Enclosed public space",
                                        },
                                        Object {
                                          "label": "Open space",
                                        },
                                        Object {
                                          "label": "Mode of transport",
                                        },
                                        Object {
                                          "label": "Prison",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="city"
                            label="Suburb"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="postcode"
                            label={
                                <FormattedMessage
                                    defaultMessage="Postcode of Exposure"
                                    id="pic.components.Patient.field.postcode"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          id="topic"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Topic"
                                                      id="pic.components.Patient.field.topic"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="name"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Patient Name"
                                                      id="pic.components.Patient.field.name"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="sex"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Biological Sex"
                                                      id="pic.components.Patient.field.sex"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "female",
                                                      },
                                                      Object {
                                                        "label": "male",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Â 
                                    </ControlLabel>
                                    <FormGroup
                                          bsClass="form-group">
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="human">
                                                Human
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={true}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="animal">
                                                Animal
                                          </Radio>
                                    </FormGroup>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="animalType"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Animal Type"
                                                      id="pic.components.Patient.field.animalType"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Dog",
                                                      },
                                                      Object {
                                                        "label": "Cat",
                                                      },
                                                      Object {
                                                        "label": "Horse/pony",
                                                      },
                                                      Object {
                                                        "label": "Cow",
                                                      },
                                                      Object {
                                                        "label": "Sheep",
                                                      },
                                                      Object {
                                                        "label": "Goat",
                                                      },
                                                      Object {
                                                        "label": "Poultry",
                                                      },
                                                      Object {
                                                        "label": "Bird not Poultry",
                                                      },
                                                      Object {
                                                        "label": "Rat/mouse",
                                                      },
                                                      Object {
                                                        "label": "Rabbit",
                                                      },
                                                      Object {
                                                        "label": "Possum",
                                                      },
                                                      Object {
                                                        "label": "Guinea Pig",
                                                      },
                                                      Object {
                                                        "label": "Kangaroo",
                                                      },
                                                      Object {
                                                        "label": "Elephant",
                                                      },
                                                      Object {
                                                        "label": "Camel",
                                                      },
                                                      Object {
                                                        "label": "Pig",
                                                      },
                                                      Object {
                                                        "label": "Marine mammal",
                                                      },
                                                      Object {
                                                        "label": "Lizard",
                                                      },
                                                      Object {
                                                        "label": "Fish",
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="weight"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Weight (kg)"
                                                      id="pic.components.Patient.field.weight"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          type="number"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Location of Exposure
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                          <Checkbox
                                                bsClass="checkbox"
                                                disabled={true}
                                                inline={true}
                                                onChange={[Function]}
                                                style={
                                                      Object {
                                                            "marginLeft": "1rem",
                                                          }
                                                }
                                                title=""
                                                value={true}>
                                                from Caller
                                          </Checkbox>
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="location"
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Location Type"
                                                      id="pic.components.Patient.field.location"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "",
                                                            },
                                                            Object {
                                                              "label": "Home",
                                                            },
                                                            Object {
                                                              "label": "Workplace",
                                                            },
                                                            Object {
                                                              "label": "Medical - hospital",
                                                            },
                                                            Object {
                                                              "label": "Medical - non-hospital",
                                                            },
                                                            Object {
                                                              "label": "Veterinary clinic",
                                                            },
                                                            Object {
                                                              "label": "Poisons Centre",
                                                            },
                                                            Object {
                                                              "label": "Educational establishment",
                                                            },
                                                            Object {
                                                              "label": "Enclosed public space",
                                                            },
                                                            Object {
                                                              "label": "Open space",
                                                            },
                                                            Object {
                                                              "label": "Mode of transport",
                                                            },
                                                            Object {
                                                              "label": "Prison",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="city"
                                          label="Suburb"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="postcode"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Postcode of Exposure"
                                                      id="pic.components.Patient.field.postcode"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <PatientView
        age=""
        ageGroup=""
        ageUnits=""
        ageYears=""
        animalType=""
        category="animal"
        circumstance=""
        currentCase={Object {}}
        executeMacro={[Function]}
        geometry={Object {}}
        interlocutorCity=""
        interlocutorGeometry={Object {}}
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        location=""
        lookupMacroTemplate={[Function]}
        macro=""
        medicalRecordNumber=""
        name=""
        occupation=""
        orgCountry=""
        poisonSeverityScore=""
        postcode=""
        pregnantLactating=""
        pregnantStatus=""
        pregnantTrimester=""
        riskAssessment=""
        sex=""
        suburb=""
        template={Object {}}
        topic=""
        updateAge={[Function]}
        updateAgeGroup={[Function]}
        updateAnimalType={[Function]}
        updateCaseTopic={[Function]}
        updateCategory={[Function]}
        updateCircumstance={[Function]}
        updateGeometry={[Function]}
        updateLocation={[Function]}
        updateLocationFromLookup={[Function]}
        updateMedicalRecordNumber={[Function]}
        updateName={[Function]}
        updateOccupation={[Function]}
        updatePoisonSeverityScore={[Function]}
        updatePostcode={[Function]}
        updatePregnantLactating={[Function]}
        updatePregnantStatus={[Function]}
        updatePregnantTrimester={[Function]}
        updateRiskAssessment={[Function]}
        updateSex={[Function]}
        updateSuburb={[Function]}
        updateTemplateMacro={[Function]}
        updateWeight={[Function]}
        weight=""
        weightUnits="" />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PatientView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "age": "",
          "ageGroup": "",
          "ageUnits": "",
          "ageYears": "",
          "animalType": "",
          "category": "animal",
          "circumstance": "",
          "currentCase": Object {},
          "executeMacro": [Function],
          "geometry": Object {},
          "interlocutorCity": "",
          "interlocutorGeometry": Object {},
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "location": "",
          "lookupMacroTemplate": [Function],
          "macro": "",
          "medicalRecordNumber": "",
          "name": "",
          "occupation": "",
          "orgCountry": "",
          "poisonSeverityScore": "",
          "postcode": "",
          "pregnantLactating": "",
          "pregnantStatus": "",
          "pregnantTrimester": "",
          "riskAssessment": "",
          "sex": "",
          "suburb": "",
          "template": Object {},
          "topic": "",
          "updateAge": [Function],
          "updateAgeGroup": [Function],
          "updateAnimalType": [Function],
          "updateCaseTopic": [Function],
          "updateCategory": [Function],
          "updateCircumstance": [Function],
          "updateGeometry": [Function],
          "updateLocation": [Function],
          "updateLocationFromLookup": [Function],
          "updateMedicalRecordNumber": [Function],
          "updateName": [Function],
          "updateOccupation": [Function],
          "updatePoisonSeverityScore": [Function],
          "updatePostcode": [Function],
          "updatePregnantLactating": [Function],
          "updatePregnantStatus": [Function],
          "updatePregnantTrimester": [Function],
          "updateRiskAssessment": [Function],
          "updateSex": [Function],
          "updateSuburb": [Function],
          "updateTemplateMacro": [Function],
          "updateWeight": [Function],
          "weight": "",
          "weightUnits": "",
        },
        "refs": Object {},
        "state": null,
        "updateLocalityFromCaller": [Function],
        "updateLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={true}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="animalType"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Animal Type"
                                                                                          id="pic.components.Patient.field.animalType"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Dog",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Horse/pony",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cow",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Sheep",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Goat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Bird not Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rat/mouse",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rabbit",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Possum",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Guinea Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Kangaroo",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Elephant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Camel",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Marine mammal",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Lizard",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Fish",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 4,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={true}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="animalType"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Animal Type"
                                                                                          id="pic.components.Patient.field.animalType"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Dog",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Horse/pony",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Cow",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Sheep",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Goat",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Bird not Poultry",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rat/mouse",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Rabbit",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Possum",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Guinea Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Kangaroo",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Elephant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Camel",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Pig",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Marine mammal",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Lizard",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Fish",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PatientView
    age=""
    ageGroup=""
    ageUnits=""
    ageYears=""
    animalType=""
    category="animal"
    circumstance=""
    currentCase={Object {}}
    executeMacro={[Function]}
    geometry={Object {}}
    interlocutorCity=""
    interlocutorGeometry={Object {}}
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    location=""
    lookupMacroTemplate={[Function]}
    macro=""
    medicalRecordNumber=""
    name=""
    occupation=""
    orgCountry=""
    poisonSeverityScore=""
    postcode=""
    pregnantLactating=""
    pregnantStatus=""
    pregnantTrimester=""
    riskAssessment=""
    sex=""
    suburb=""
    template={Object {}}
    topic=""
    updateAge={[Function]}
    updateAgeGroup={[Function]}
    updateAnimalType={[Function]}
    updateCaseTopic={[Function]}
    updateCategory={[Function]}
    updateCircumstance={[Function]}
    updateGeometry={[Function]}
    updateLocation={[Function]}
    updateLocationFromLookup={[Function]}
    updateMedicalRecordNumber={[Function]}
    updateName={[Function]}
    updateOccupation={[Function]}
    updatePoisonSeverityScore={[Function]}
    updatePostcode={[Function]}
    updatePregnantLactating={[Function]}
    updatePregnantStatus={[Function]}
    updatePregnantTrimester={[Function]}
    updateRiskAssessment={[Function]}
    updateSex={[Function]}
    updateSuburb={[Function]}
    updateTemplateMacro={[Function]}
    updateWeight={[Function]}
    weight=""
    weightUnits="" />,
}
`;

exports[`PatientView renders the Pregnancy fields for female patients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            id="topic"
                            label={
                                <FormattedMessage
                                    defaultMessage="Topic"
                                    id="pic.components.Patient.field.topic"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="name"
                            label={
                                <FormattedMessage
                                    defaultMessage="Patient Name"
                                    id="pic.components.Patient.field.name"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="sex"
                            label={
                                <FormattedMessage
                                    defaultMessage="Biological Sex"
                                    id="pic.components.Patient.field.sex"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "female",
                                    },
                                    Object {
                                      "label": "male",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="female" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Â 
                        </ControlLabel>
                        <FormGroup
                            bsClass="form-group">
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="human">
                                Human
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="animal">
                                Animal
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="age"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age"
                                    id="pic.components.Patient.field.age"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageUnits"
                            label="Â "
                            noblank={true}
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "months",
                                    },
                                    Object {
                                      "label": "years",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageGroup"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age Group"
                                    id="pic.components.Patient.field.ageGroup"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "neonate",
                                    },
                                    Object {
                                      "label": "infant",
                                    },
                                    Object {
                                      "label": "toddler",
                                    },
                                    Object {
                                      "label": "child",
                                    },
                                    Object {
                                      "label": "adolescent",
                                    },
                                    Object {
                                      "label": "adult",
                                    },
                                    Object {
                                      "label": "elderly",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="weight"
                            label={
                                <FormattedMessage
                                    defaultMessage="Weight (kg)"
                                    id="pic.components.Patient.field.weight"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            type="number"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Circumstance"
                                    id="pic.components.Patient.field.circumstance"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                bodyContainer={true}
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "Unknown",
                                        },
                                        Object {
                                          "label": "Unintentional - Accidental",
                                        },
                                        Object {
                                          "label": "Unintentional - Occupational",
                                        },
                                        Object {
                                          "label": "Unintentional - Environmental",
                                        },
                                        Object {
                                          "label": "Unintentional - Transport accident",
                                        },
                                        Object {
                                          "label": "Unintentional - Fire",
                                        },
                                        Object {
                                          "label": "Unintentional - Therapeutic error",
                                        },
                                        Object {
                                          "label": "Unintentional - Misuse",
                                        },
                                        Object {
                                          "label": "Unintentional - Food Poisoning",
                                        },
                                        Object {
                                          "label": "Unintentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Unintentional - Unknown",
                                        },
                                        Object {
                                          "label": "Intentional - Suicide",
                                        },
                                        Object {
                                          "label": "Intentional - Misuse",
                                        },
                                        Object {
                                          "label": "Intentional - Abuse",
                                        },
                                        Object {
                                          "label": "Intentional - Malicious/criminal",
                                        },
                                        Object {
                                          "label": "Intentional - Abortion",
                                        },
                                        Object {
                                          "label": "Intentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Intentional - Unknown",
                                        },
                                        Object {
                                          "label": "Adverse Reaction",
                                        },
                                        Object {
                                          "label": "Other - see notes",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="occupation"
                            label={
                                <FormattedMessage
                                    defaultMessage="Occupation"
                                    id="pic.components.Patient.field.occupation"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "none",
                                    },
                                    Object {
                                      "label": "housewife / husband",
                                    },
                                    Object {
                                      "label": "agricultural worker",
                                    },
                                    Object {
                                      "label": "industrial worker",
                                    },
                                    Object {
                                      "label": "cottage industry worker",
                                    },
                                    Object {
                                      "label": "commercial",
                                    },
                                    Object {
                                      "label": "services",
                                    },
                                    Object {
                                      "label": "student",
                                    },
                                    Object {
                                      "label": "other - see notes",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="medicalRecordNumber"
                            label={
                                <FormattedMessage
                                    defaultMessage="Hospital MRN"
                                    id="pic.components.Patient.field.mrn"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Location of Exposure
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                            <Checkbox
                                bsClass="checkbox"
                                disabled={true}
                                inline={true}
                                onChange={[Function]}
                                style={
                                    Object {
                                        "marginLeft": "1rem",
                                      }
                                }
                                title=""
                                value={true}>
                                from Caller
                            </Checkbox>
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="location"
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Location Type"
                                    id="pic.components.Patient.field.location"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "",
                                        },
                                        Object {
                                          "label": "Home",
                                        },
                                        Object {
                                          "label": "Workplace",
                                        },
                                        Object {
                                          "label": "Medical - hospital",
                                        },
                                        Object {
                                          "label": "Medical - non-hospital",
                                        },
                                        Object {
                                          "label": "Veterinary clinic",
                                        },
                                        Object {
                                          "label": "Poisons Centre",
                                        },
                                        Object {
                                          "label": "Educational establishment",
                                        },
                                        Object {
                                          "label": "Enclosed public space",
                                        },
                                        Object {
                                          "label": "Open space",
                                        },
                                        Object {
                                          "label": "Mode of transport",
                                        },
                                        Object {
                                          "label": "Prison",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="city"
                            label="Suburb"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="postcode"
                            label={
                                <FormattedMessage
                                    defaultMessage="Postcode of Exposure"
                                    id="pic.components.Patient.field.postcode"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Pregnancy Status
                </legend>
                <Col
                    bsClass="col"
                    componentClass="div"
                    xs={4}>
                    <FormGroup
                        bsClass="form-group">
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Pregnancy Status
                        </ControlLabel>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantStatus"
                            onChange={[Function]}
                            title=""
                            value="yes">
                            Yes
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantStatus"
                            onChange={[Function]}
                            title=""
                            value="no">
                            No
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantStatus"
                            onChange={[Function]}
                            title=""
                            value="uncertain">
                            Uncertain
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantStatus"
                            onChange={[Function]}
                            title=""
                            value="unknown">
                            Unknown
                        </Radio>
                    </FormGroup>
                </Col>
                <Col
                    bsClass="col"
                    componentClass="div"
                    xs={4}>
                    <FormGroup
                        bsClass="form-group">
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Trimester
                        </ControlLabel>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantTrimester"
                            onChange={[Function]}
                            title=""
                            value="1">
                            1
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantTrimester"
                            onChange={[Function]}
                            title=""
                            value="2">
                            2
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantTrimester"
                            onChange={[Function]}
                            title=""
                            value="3">
                            3
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantTrimester"
                            onChange={[Function]}
                            title=""
                            value="unknown">
                            Unknown
                        </Radio>
                    </FormGroup>
                </Col>
                <Col
                    bsClass="col"
                    componentClass="div"
                    xs={4}>
                    <FormGroup
                        bsClass="form-group">
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Lactating
                        </ControlLabel>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantLactating"
                            onChange={[Function]}
                            title=""
                            value="yes">
                            Yes
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantLactating"
                            onChange={[Function]}
                            title=""
                            value="no">
                            No
                        </Radio>
                        <br />
                        <Radio
                            bsClass="radio"
                            checked={false}
                            disabled={true}
                            inline={true}
                            name="pregnantLactating"
                            onChange={[Function]}
                            title=""
                            value="unknown">
                            Unknown
                        </Radio>
                    </FormGroup>
                </Col>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Poisoning Risk Assessment
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="riskassessment"
                            label="Risk Assessment"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "No Risk",
                                    },
                                    Object {
                                      "label": "Minimal Risk",
                                    },
                                    Object {
                                      "label": "Moderate Risk",
                                    },
                                    Object {
                                      "label": "High Risk",
                                    },
                                    Object {
                                      "label": "Established Poisoning",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="poisonseverityscore"
                            label="Poison Severity Score at time of Call"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "None",
                                    },
                                    Object {
                                      "label": "Minor",
                                    },
                                    Object {
                                      "label": "Moderate",
                                    },
                                    Object {
                                      "label": "Severe",
                                    },
                                    Object {
                                      "label": "Death",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          id="topic"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Topic"
                                                      id="pic.components.Patient.field.topic"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="name"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Patient Name"
                                                      id="pic.components.Patient.field.name"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="sex"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Biological Sex"
                                                      id="pic.components.Patient.field.sex"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "female",
                                                      },
                                                      Object {
                                                        "label": "male",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="female" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Â 
                                    </ControlLabel>
                                    <FormGroup
                                          bsClass="form-group">
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="human">
                                                Human
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="animal">
                                                Animal
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="age"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age"
                                                      id="pic.components.Patient.field.age"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageUnits"
                                          label="Â "
                                          noblank={true}
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "months",
                                                      },
                                                      Object {
                                                        "label": "years",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageGroup"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age Group"
                                                      id="pic.components.Patient.field.ageGroup"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "neonate",
                                                      },
                                                      Object {
                                                        "label": "infant",
                                                      },
                                                      Object {
                                                        "label": "toddler",
                                                      },
                                                      Object {
                                                        "label": "child",
                                                      },
                                                      Object {
                                                        "label": "adolescent",
                                                      },
                                                      Object {
                                                        "label": "adult",
                                                      },
                                                      Object {
                                                        "label": "elderly",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="weight"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Weight (kg)"
                                                      id="pic.components.Patient.field.weight"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          type="number"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Circumstance"
                                                      id="pic.components.Patient.field.circumstance"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                bodyContainer={true}
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "Unknown",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Accidental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Occupational",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Environmental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Transport accident",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Fire",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Therapeutic error",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Food Poisoning",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Suicide",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Malicious/criminal",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abortion",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Adverse Reaction",
                                                            },
                                                            Object {
                                                              "label": "Other - see notes",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="occupation"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Occupation"
                                                      id="pic.components.Patient.field.occupation"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "none",
                                                      },
                                                      Object {
                                                        "label": "housewife / husband",
                                                      },
                                                      Object {
                                                        "label": "agricultural worker",
                                                      },
                                                      Object {
                                                        "label": "industrial worker",
                                                      },
                                                      Object {
                                                        "label": "cottage industry worker",
                                                      },
                                                      Object {
                                                        "label": "commercial",
                                                      },
                                                      Object {
                                                        "label": "services",
                                                      },
                                                      Object {
                                                        "label": "student",
                                                      },
                                                      Object {
                                                        "label": "other - see notes",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="medicalRecordNumber"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Hospital MRN"
                                                      id="pic.components.Patient.field.mrn"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Location of Exposure
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                          <Checkbox
                                                bsClass="checkbox"
                                                disabled={true}
                                                inline={true}
                                                onChange={[Function]}
                                                style={
                                                      Object {
                                                            "marginLeft": "1rem",
                                                          }
                                                }
                                                title=""
                                                value={true}>
                                                from Caller
                                          </Checkbox>
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="location"
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Location Type"
                                                      id="pic.components.Patient.field.location"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "",
                                                            },
                                                            Object {
                                                              "label": "Home",
                                                            },
                                                            Object {
                                                              "label": "Workplace",
                                                            },
                                                            Object {
                                                              "label": "Medical - hospital",
                                                            },
                                                            Object {
                                                              "label": "Medical - non-hospital",
                                                            },
                                                            Object {
                                                              "label": "Veterinary clinic",
                                                            },
                                                            Object {
                                                              "label": "Poisons Centre",
                                                            },
                                                            Object {
                                                              "label": "Educational establishment",
                                                            },
                                                            Object {
                                                              "label": "Enclosed public space",
                                                            },
                                                            Object {
                                                              "label": "Open space",
                                                            },
                                                            Object {
                                                              "label": "Mode of transport",
                                                            },
                                                            Object {
                                                              "label": "Prison",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="city"
                                          label="Suburb"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="postcode"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Postcode of Exposure"
                                                      id="pic.components.Patient.field.postcode"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Pregnancy Status
                        </legend>
                        <Col
                              bsClass="col"
                              componentClass="div"
                              xs={4}>
                              <FormGroup
                                    bsClass="form-group">
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Pregnancy Status
                                    </ControlLabel>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantStatus"
                                          onChange={[Function]}
                                          title=""
                                          value="yes">
                                          Yes
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantStatus"
                                          onChange={[Function]}
                                          title=""
                                          value="no">
                                          No
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantStatus"
                                          onChange={[Function]}
                                          title=""
                                          value="uncertain">
                                          Uncertain
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantStatus"
                                          onChange={[Function]}
                                          title=""
                                          value="unknown">
                                          Unknown
                                    </Radio>
                              </FormGroup>
                        </Col>
                        <Col
                              bsClass="col"
                              componentClass="div"
                              xs={4}>
                              <FormGroup
                                    bsClass="form-group">
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Trimester
                                    </ControlLabel>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantTrimester"
                                          onChange={[Function]}
                                          title=""
                                          value="1">
                                          1
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantTrimester"
                                          onChange={[Function]}
                                          title=""
                                          value="2">
                                          2
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantTrimester"
                                          onChange={[Function]}
                                          title=""
                                          value="3">
                                          3
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantTrimester"
                                          onChange={[Function]}
                                          title=""
                                          value="unknown">
                                          Unknown
                                    </Radio>
                              </FormGroup>
                        </Col>
                        <Col
                              bsClass="col"
                              componentClass="div"
                              xs={4}>
                              <FormGroup
                                    bsClass="form-group">
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Lactating
                                    </ControlLabel>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantLactating"
                                          onChange={[Function]}
                                          title=""
                                          value="yes">
                                          Yes
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantLactating"
                                          onChange={[Function]}
                                          title=""
                                          value="no">
                                          No
                                    </Radio>
                                    <br />
                                    <Radio
                                          bsClass="radio"
                                          checked={false}
                                          disabled={true}
                                          inline={true}
                                          name="pregnantLactating"
                                          onChange={[Function]}
                                          title=""
                                          value="unknown">
                                          Unknown
                                    </Radio>
                              </FormGroup>
                        </Col>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Poisoning Risk Assessment
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="riskassessment"
                                          label="Risk Assessment"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "No Risk",
                                                      },
                                                      Object {
                                                        "label": "Minimal Risk",
                                                      },
                                                      Object {
                                                        "label": "Moderate Risk",
                                                      },
                                                      Object {
                                                        "label": "High Risk",
                                                      },
                                                      Object {
                                                        "label": "Established Poisoning",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="poisonseverityscore"
                                          label="Poison Severity Score at time of Call"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "None",
                                                      },
                                                      Object {
                                                        "label": "Minor",
                                                      },
                                                      Object {
                                                        "label": "Moderate",
                                                      },
                                                      Object {
                                                        "label": "Severe",
                                                      },
                                                      Object {
                                                        "label": "Death",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <PatientView
        age=""
        ageGroup=""
        ageUnits=""
        ageYears=""
        animalType=""
        category=""
        circumstance=""
        currentCase={Object {}}
        executeMacro={[Function]}
        geometry={Object {}}
        interlocutorCity=""
        interlocutorGeometry={Object {}}
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        location=""
        lookupMacroTemplate={[Function]}
        macro=""
        medicalRecordNumber=""
        name=""
        occupation=""
        orgCountry=""
        poisonSeverityScore=""
        postcode=""
        pregnantLactating=""
        pregnantStatus=""
        pregnantTrimester=""
        riskAssessment=""
        sex="female"
        suburb=""
        template={Object {}}
        topic=""
        updateAge={[Function]}
        updateAgeGroup={[Function]}
        updateAnimalType={[Function]}
        updateCaseTopic={[Function]}
        updateCategory={[Function]}
        updateCircumstance={[Function]}
        updateGeometry={[Function]}
        updateLocation={[Function]}
        updateLocationFromLookup={[Function]}
        updateMedicalRecordNumber={[Function]}
        updateName={[Function]}
        updateOccupation={[Function]}
        updatePoisonSeverityScore={[Function]}
        updatePostcode={[Function]}
        updatePregnantLactating={[Function]}
        updatePregnantStatus={[Function]}
        updatePregnantTrimester={[Function]}
        updateRiskAssessment={[Function]}
        updateSex={[Function]}
        updateSuburb={[Function]}
        updateTemplateMacro={[Function]}
        updateWeight={[Function]}
        weight=""
        weightUnits="" />,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PatientView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "age": "",
          "ageGroup": "",
          "ageUnits": "",
          "ageYears": "",
          "animalType": "",
          "category": "",
          "circumstance": "",
          "currentCase": Object {},
          "executeMacro": [Function],
          "geometry": Object {},
          "interlocutorCity": "",
          "interlocutorGeometry": Object {},
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "location": "",
          "lookupMacroTemplate": [Function],
          "macro": "",
          "medicalRecordNumber": "",
          "name": "",
          "occupation": "",
          "orgCountry": "",
          "poisonSeverityScore": "",
          "postcode": "",
          "pregnantLactating": "",
          "pregnantStatus": "",
          "pregnantTrimester": "",
          "riskAssessment": "",
          "sex": "female",
          "suburb": "",
          "template": Object {},
          "topic": "",
          "updateAge": [Function],
          "updateAgeGroup": [Function],
          "updateAnimalType": [Function],
          "updateCaseTopic": [Function],
          "updateCategory": [Function],
          "updateCircumstance": [Function],
          "updateGeometry": [Function],
          "updateLocation": [Function],
          "updateLocationFromLookup": [Function],
          "updateMedicalRecordNumber": [Function],
          "updateName": [Function],
          "updateOccupation": [Function],
          "updatePoisonSeverityScore": [Function],
          "updatePostcode": [Function],
          "updatePregnantLactating": [Function],
          "updatePregnantStatus": [Function],
          "updatePregnantTrimester": [Function],
          "updateRiskAssessment": [Function],
          "updateSex": [Function],
          "updateSuburb": [Function],
          "updateTemplateMacro": [Function],
          "updateWeight": [Function],
          "weight": "",
          "weightUnits": "",
        },
        "refs": Object {},
        "state": null,
        "updateLocalityFromCaller": [Function],
        "updateLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="female" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Pregnancy Status
                                        </legend>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Pregnancy Status
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="yes">
                                                                      Yes
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="no">
                                                                      No
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="uncertain">
                                                                      Uncertain
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Trimester
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="1">
                                                                      1
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="2">
                                                                      2
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="3">
                                                                      3
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Lactating
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="yes">
                                                                      Yes
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="no">
                                                                      No
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 8,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="female" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Pregnancy Status
                                        </legend>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Pregnancy Status
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="yes">
                                                                      Yes
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="no">
                                                                      No
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="uncertain">
                                                                      Uncertain
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantStatus"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Trimester
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="1">
                                                                      1
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="2">
                                                                      2
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="3">
                                                                      3
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantTrimester"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={4}>
                                                  <FormGroup
                                                            bsClass="form-group">
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Lactating
                                                            </ControlLabel>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="yes">
                                                                      Yes
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="no">
                                                                      No
                                                            </Radio>
                                                            <br />
                                                            <Radio
                                                                      bsClass="radio"
                                                                      checked={false}
                                                                      disabled={true}
                                                                      inline={true}
                                                                      name="pregnantLactating"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                      value="unknown">
                                                                      Unknown
                                                            </Radio>
                                                  </FormGroup>
                                        </Col>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PatientView
    age=""
    ageGroup=""
    ageUnits=""
    ageYears=""
    animalType=""
    category=""
    circumstance=""
    currentCase={Object {}}
    executeMacro={[Function]}
    geometry={Object {}}
    interlocutorCity=""
    interlocutorGeometry={Object {}}
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    location=""
    lookupMacroTemplate={[Function]}
    macro=""
    medicalRecordNumber=""
    name=""
    occupation=""
    orgCountry=""
    poisonSeverityScore=""
    postcode=""
    pregnantLactating=""
    pregnantStatus=""
    pregnantTrimester=""
    riskAssessment=""
    sex="female"
    suburb=""
    template={Object {}}
    topic=""
    updateAge={[Function]}
    updateAgeGroup={[Function]}
    updateAnimalType={[Function]}
    updateCaseTopic={[Function]}
    updateCategory={[Function]}
    updateCircumstance={[Function]}
    updateGeometry={[Function]}
    updateLocation={[Function]}
    updateLocationFromLookup={[Function]}
    updateMedicalRecordNumber={[Function]}
    updateName={[Function]}
    updateOccupation={[Function]}
    updatePoisonSeverityScore={[Function]}
    updatePostcode={[Function]}
    updatePregnantLactating={[Function]}
    updatePregnantStatus={[Function]}
    updatePregnantTrimester={[Function]}
    updateRiskAssessment={[Function]}
    updateSex={[Function]}
    updateSuburb={[Function]}
    updateTemplateMacro={[Function]}
    updateWeight={[Function]}
    weight=""
    weightUnits="" />,
}
`;

exports[`PatientView renders the macro field for template mode 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            id="topic"
                            label={
                                <FormattedMessage
                                    defaultMessage="Topic"
                                    id="pic.components.Patient.field.topic"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            help={null}
                            id="macro"
                            label={
                                <FormattedMessage
                                    defaultMessage="Macro"
                                    id="pic.components.Patient.field.macro"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            style={null}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="name"
                            label={
                                <FormattedMessage
                                    defaultMessage="Patient Name"
                                    id="pic.components.Patient.field.name"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="sex"
                            label={
                                <FormattedMessage
                                    defaultMessage="Biological Sex"
                                    id="pic.components.Patient.field.sex"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "female",
                                    },
                                    Object {
                                      "label": "male",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Â 
                        </ControlLabel>
                        <FormGroup
                            bsClass="form-group">
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="human">
                                Human
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="animal">
                                Animal
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="age"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age"
                                    id="pic.components.Patient.field.age"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageUnits"
                            label="Â "
                            noblank={true}
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "months",
                                    },
                                    Object {
                                      "label": "years",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageGroup"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age Group"
                                    id="pic.components.Patient.field.ageGroup"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "neonate",
                                    },
                                    Object {
                                      "label": "infant",
                                    },
                                    Object {
                                      "label": "toddler",
                                    },
                                    Object {
                                      "label": "child",
                                    },
                                    Object {
                                      "label": "adolescent",
                                    },
                                    Object {
                                      "label": "adult",
                                    },
                                    Object {
                                      "label": "elderly",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="weight"
                            label={
                                <FormattedMessage
                                    defaultMessage="Weight (kg)"
                                    id="pic.components.Patient.field.weight"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            type="number"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Circumstance"
                                    id="pic.components.Patient.field.circumstance"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                bodyContainer={true}
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "Unknown",
                                        },
                                        Object {
                                          "label": "Unintentional - Accidental",
                                        },
                                        Object {
                                          "label": "Unintentional - Occupational",
                                        },
                                        Object {
                                          "label": "Unintentional - Environmental",
                                        },
                                        Object {
                                          "label": "Unintentional - Transport accident",
                                        },
                                        Object {
                                          "label": "Unintentional - Fire",
                                        },
                                        Object {
                                          "label": "Unintentional - Therapeutic error",
                                        },
                                        Object {
                                          "label": "Unintentional - Misuse",
                                        },
                                        Object {
                                          "label": "Unintentional - Food Poisoning",
                                        },
                                        Object {
                                          "label": "Unintentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Unintentional - Unknown",
                                        },
                                        Object {
                                          "label": "Intentional - Suicide",
                                        },
                                        Object {
                                          "label": "Intentional - Misuse",
                                        },
                                        Object {
                                          "label": "Intentional - Abuse",
                                        },
                                        Object {
                                          "label": "Intentional - Malicious/criminal",
                                        },
                                        Object {
                                          "label": "Intentional - Abortion",
                                        },
                                        Object {
                                          "label": "Intentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Intentional - Unknown",
                                        },
                                        Object {
                                          "label": "Adverse Reaction",
                                        },
                                        Object {
                                          "label": "Other - see notes",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="occupation"
                            label={
                                <FormattedMessage
                                    defaultMessage="Occupation"
                                    id="pic.components.Patient.field.occupation"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "none",
                                    },
                                    Object {
                                      "label": "housewife / husband",
                                    },
                                    Object {
                                      "label": "agricultural worker",
                                    },
                                    Object {
                                      "label": "industrial worker",
                                    },
                                    Object {
                                      "label": "cottage industry worker",
                                    },
                                    Object {
                                      "label": "commercial",
                                    },
                                    Object {
                                      "label": "services",
                                    },
                                    Object {
                                      "label": "student",
                                    },
                                    Object {
                                      "label": "other - see notes",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="medicalRecordNumber"
                            label={
                                <FormattedMessage
                                    defaultMessage="Hospital MRN"
                                    id="pic.components.Patient.field.mrn"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Location of Exposure
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="location"
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Location Type"
                                    id="pic.components.Patient.field.location"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "",
                                        },
                                        Object {
                                          "label": "Home",
                                        },
                                        Object {
                                          "label": "Workplace",
                                        },
                                        Object {
                                          "label": "Medical - hospital",
                                        },
                                        Object {
                                          "label": "Medical - non-hospital",
                                        },
                                        Object {
                                          "label": "Veterinary clinic",
                                        },
                                        Object {
                                          "label": "Poisons Centre",
                                        },
                                        Object {
                                          "label": "Educational establishment",
                                        },
                                        Object {
                                          "label": "Enclosed public space",
                                        },
                                        Object {
                                          "label": "Open space",
                                        },
                                        Object {
                                          "label": "Mode of transport",
                                        },
                                        Object {
                                          "label": "Prison",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="city"
                            label="Suburb"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="postcode"
                            label={
                                <FormattedMessage
                                    defaultMessage="Postcode of Exposure"
                                    id="pic.components.Patient.field.postcode"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Poisoning Risk Assessment
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="riskassessment"
                            label="Risk Assessment"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "No Risk",
                                    },
                                    Object {
                                      "label": "Minimal Risk",
                                    },
                                    Object {
                                      "label": "Moderate Risk",
                                    },
                                    Object {
                                      "label": "High Risk",
                                    },
                                    Object {
                                      "label": "Established Poisoning",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="poisonseverityscore"
                            label="Poison Severity Score at time of Call"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "None",
                                    },
                                    Object {
                                      "label": "Minor",
                                    },
                                    Object {
                                      "label": "Moderate",
                                    },
                                    Object {
                                      "label": "Severe",
                                    },
                                    Object {
                                      "label": "Death",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          id="topic"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Topic"
                                                      id="pic.components.Patient.field.topic"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          help={null}
                                          id="macro"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Macro"
                                                      id="pic.components.Patient.field.macro"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          style={null}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="name"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Patient Name"
                                                      id="pic.components.Patient.field.name"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="sex"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Biological Sex"
                                                      id="pic.components.Patient.field.sex"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "female",
                                                      },
                                                      Object {
                                                        "label": "male",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Â 
                                    </ControlLabel>
                                    <FormGroup
                                          bsClass="form-group">
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="human">
                                                Human
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="animal">
                                                Animal
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="age"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age"
                                                      id="pic.components.Patient.field.age"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageUnits"
                                          label="Â "
                                          noblank={true}
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "months",
                                                      },
                                                      Object {
                                                        "label": "years",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageGroup"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age Group"
                                                      id="pic.components.Patient.field.ageGroup"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "neonate",
                                                      },
                                                      Object {
                                                        "label": "infant",
                                                      },
                                                      Object {
                                                        "label": "toddler",
                                                      },
                                                      Object {
                                                        "label": "child",
                                                      },
                                                      Object {
                                                        "label": "adolescent",
                                                      },
                                                      Object {
                                                        "label": "adult",
                                                      },
                                                      Object {
                                                        "label": "elderly",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="weight"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Weight (kg)"
                                                      id="pic.components.Patient.field.weight"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          type="number"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Circumstance"
                                                      id="pic.components.Patient.field.circumstance"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                bodyContainer={true}
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "Unknown",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Accidental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Occupational",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Environmental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Transport accident",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Fire",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Therapeutic error",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Food Poisoning",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Suicide",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Malicious/criminal",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abortion",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Adverse Reaction",
                                                            },
                                                            Object {
                                                              "label": "Other - see notes",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="occupation"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Occupation"
                                                      id="pic.components.Patient.field.occupation"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "none",
                                                      },
                                                      Object {
                                                        "label": "housewife / husband",
                                                      },
                                                      Object {
                                                        "label": "agricultural worker",
                                                      },
                                                      Object {
                                                        "label": "industrial worker",
                                                      },
                                                      Object {
                                                        "label": "cottage industry worker",
                                                      },
                                                      Object {
                                                        "label": "commercial",
                                                      },
                                                      Object {
                                                        "label": "services",
                                                      },
                                                      Object {
                                                        "label": "student",
                                                      },
                                                      Object {
                                                        "label": "other - see notes",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="medicalRecordNumber"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Hospital MRN"
                                                      id="pic.components.Patient.field.mrn"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Location of Exposure
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="location"
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Location Type"
                                                      id="pic.components.Patient.field.location"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "",
                                                            },
                                                            Object {
                                                              "label": "Home",
                                                            },
                                                            Object {
                                                              "label": "Workplace",
                                                            },
                                                            Object {
                                                              "label": "Medical - hospital",
                                                            },
                                                            Object {
                                                              "label": "Medical - non-hospital",
                                                            },
                                                            Object {
                                                              "label": "Veterinary clinic",
                                                            },
                                                            Object {
                                                              "label": "Poisons Centre",
                                                            },
                                                            Object {
                                                              "label": "Educational establishment",
                                                            },
                                                            Object {
                                                              "label": "Enclosed public space",
                                                            },
                                                            Object {
                                                              "label": "Open space",
                                                            },
                                                            Object {
                                                              "label": "Mode of transport",
                                                            },
                                                            Object {
                                                              "label": "Prison",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="city"
                                          label="Suburb"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="postcode"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Postcode of Exposure"
                                                      id="pic.components.Patient.field.postcode"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Poisoning Risk Assessment
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="riskassessment"
                                          label="Risk Assessment"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "No Risk",
                                                      },
                                                      Object {
                                                        "label": "Minimal Risk",
                                                      },
                                                      Object {
                                                        "label": "Moderate Risk",
                                                      },
                                                      Object {
                                                        "label": "High Risk",
                                                      },
                                                      Object {
                                                        "label": "Established Poisoning",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="poisonseverityscore"
                                          label="Poison Severity Score at time of Call"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "None",
                                                      },
                                                      Object {
                                                        "label": "Minor",
                                                      },
                                                      Object {
                                                        "label": "Moderate",
                                                      },
                                                      Object {
                                                        "label": "Severe",
                                                      },
                                                      Object {
                                                        "label": "Death",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
      "uiMode": "editTemplate",
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "boilerplate.containers.NotFoundPage.header": "Page not found.",
            "pic.app.click": "Click here",
            "pic.app.mode.editTemplate": "Template Edit Mode",
            "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
            "pic.app.version": "version {version}",
            "pic.components.Case.naturalId.none": "No ID",
            "pic.components.Case.section.agents.individual": "Substance {suffix}",
            "pic.components.Case.section.agents.overview": "Overview",
            "pic.components.Case.section.agents.title": "Substances",
            "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
            "pic.components.Case.section.interlocutor.title": "Caller",
            "pic.components.Case.section.investigations.title": "Investigations",
            "pic.components.Case.section.notes": "Notes",
            "pic.components.Case.section.overview.title": "Current Status",
            "pic.components.Case.section.patient.title": "Patient",
            "pic.components.Case.section.quick.title": "Quick Entry",
            "pic.components.Case.section.treatment.title": "Treatment",
            "pic.components.Case.status.closed": "Closed",
            "pic.components.Case.status.deleted": "Deleted",
            "pic.components.Case.status.open": "Open",
            "pic.components.Case.status.reviewed": "Closed Pending Review",
            "pic.components.Case.topic.none": "No Topic",
            "pic.components.Case.type.case": "Case",
            "pic.components.Case.type.hoax": "Other",
            "pic.components.Case.type.inqury": "Inquiry",
            "pic.components.CaseList.adolescent": "Adolescent",
            "pic.components.CaseList.adult": "Adult",
            "pic.components.CaseList.animal": "Animal",
            "pic.components.CaseList.child": "Child",
            "pic.components.CaseList.comms": "Comms",
            "pic.components.CaseList.elderly": "Elderly",
            "pic.components.CaseList.human": "Human",
            "pic.components.CaseList.infant": "Infant",
            "pic.components.CaseList.item.label": "{category} - {name}",
            "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
            "pic.components.CaseList.neonate": "Neonate",
            "pic.components.CaseList.notes": "Notes",
            "pic.components.CaseList.toddler": "Toddler",
            "pic.components.CaseList.topic.none": "<no topic>",
            "pic.components.ClinicalFeatures.button.close": "Close",
            "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
            "pic.components.ClinicalFeatures.field.features": "Features",
            "pic.components.ClinicalFeatures.field.outcome": "Outcome",
            "pic.components.ClinicalFeatures.field.outcome.death": "Death",
            "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
            "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
            "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
            "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
            "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
            "pic.components.ClinicalFeatures.field.when.before": "Before Call",
            "pic.components.ClinicalFeatures.label.content.none": "No Content",
            "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
            "pic.components.ClinicalFeatures.message.none": "No Features",
            "pic.components.ClinicalFeendures.field.when.end": "End of Case",
            "pic.components.DashboardPage.action.admin": "Admin",
            "pic.components.DashboardPage.action.analytics": "Analytics",
            "pic.components.DashboardPage.action.app": "App",
            "pic.components.DashboardPage.action.menu": "Menu",
            "pic.components.DashboardPage.action.signout": "Logout",
            "pic.components.Interlocutor.communication": "Communication",
            "pic.components.Interlocutor.communication.plural": "Communications",
            "pic.components.Interlocutor.communication.type": "Type",
            "pic.components.Interlocutor.field.category": "Caller Category",
            "pic.components.Interlocutor.field.contact": "Contact Detail",
            "pic.components.Interlocutor.field.detail.default": "Caller Detail",
            "pic.components.Interlocutor.field.detail.email": "Caller Email",
            "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
            "pic.components.Interlocutor.field.direction": "Direction",
            "pic.components.Interlocutor.field.medium.type": "Communication Type",
            "pic.components.Interlocutor.field.name": "Caller Name",
            "pic.components.Interlocutor.field.organisation.location": "Location",
            "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
            "pic.components.Interlocutor.history.none": "Change history unavailable",
            "pic.components.Interlocutor.section.caller": "Caller",
            "pic.components.Interlocutor.section.organisation": "Organisation",
            "pic.components.Investigations.requests.content.none": "No request content",
            "pic.components.Investigations.requests.label.pending": "PENDING",
            "pic.components.Investigations.requests.label.result": "RESULT",
            "pic.components.Investigations.requests.message.none": "No Investigations Requested",
            "pic.components.Investigations.result.add": "Add Result",
            "pic.components.Investigations.results.content.none": "No result content",
            "pic.components.Investigations.results.message.none": "No results",
            "pic.components.Overview.communication.interlocutor.name": "Caller:",
            "pic.components.Overview.communication.spi.name": "SPI:",
            "pic.components.Patient.field.age": "Age",
            "pic.components.Patient.field.ageGroup": "Age Group",
            "pic.components.Patient.field.ageYears": "Age in Years",
            "pic.components.Patient.field.animalType": "Animal Type",
            "pic.components.Patient.field.circumstance": "Circumstance",
            "pic.components.Patient.field.location": "Location Type",
            "pic.components.Patient.field.macro": "Macro",
            "pic.components.Patient.field.macro.invalid": "This macro already exists.",
            "pic.components.Patient.field.macro.required": "A macro is required.",
            "pic.components.Patient.field.mrn": "Hospital MRN",
            "pic.components.Patient.field.name": "Patient Name",
            "pic.components.Patient.field.occupation": "Occupation",
            "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
            "pic.components.Patient.field.postcode": "Postcode of Exposure",
            "pic.components.Patient.field.pregnancy.lactating": "Lactating",
            "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
            "pic.components.Patient.field.pregnancy.trimester": "Trimester",
            "pic.components.Patient.field.riskassessment": "Risk Assessment",
            "pic.components.Patient.field.sex": "Biological Sex",
            "pic.components.Patient.field.topic": "Topic",
            "pic.components.Patient.field.weight": "Weight (kg)",
            "pic.components.Patient.section.exposure": "Exposure",
            "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
            "pic.components.TemplateList.action.template.delete": "Delete Template",
            "pic.components.TemplateList.action.template.edit": "Edit Template",
            "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
            "pic.components.TemplateList.templates.none": "No Templates",
            "pic.components.Treatment.button.referral.add": "Add Referral",
            "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
            "pic.components.Treatment.field.disposition": "Disposition",
            "pic.components.Treatment.field.treatments": "Treatments",
            "pic.components.Treatment.label.referee": "Refer to Specialist",
            "pic.components.Treatment.label.referrals.none": "No Referrals",
            "pic.components.Treatment.label.specialty": "Specialty",
            "pic.components.Treatment.label.treatment.none": "No Treatments",
            "pic.components.Treatment.message.none": "No Treatments",
            "pic.components.Treatment.referrals": "Referrals",
            "pic.components.Treatment.treatment": "Treatment",
            "pic.components.Treatment.treatment.plural": "Treatments",
            "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
          },
          "now": [Function],
        },
        "uiMode": "editTemplate",
      },
      "_currentElement": <PatientView
        age=""
        ageGroup=""
        ageUnits=""
        ageYears=""
        animalType=""
        category=""
        circumstance=""
        currentCase={Object {}}
        executeMacro={[Function]}
        geometry={Object {}}
        interlocutorCity=""
        interlocutorGeometry={Object {}}
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        location=""
        lookupMacroTemplate={[Function]}
        macro=""
        medicalRecordNumber=""
        name=""
        occupation=""
        orgCountry=""
        poisonSeverityScore=""
        postcode=""
        pregnantLactating=""
        pregnantStatus=""
        pregnantTrimester=""
        riskAssessment=""
        sex=""
        suburb=""
        template={Object {}}
        topic=""
        updateAge={[Function]}
        updateAgeGroup={[Function]}
        updateAnimalType={[Function]}
        updateCaseTopic={[Function]}
        updateCategory={[Function]}
        updateCircumstance={[Function]}
        updateGeometry={[Function]}
        updateLocation={[Function]}
        updateLocationFromLookup={[Function]}
        updateMedicalRecordNumber={[Function]}
        updateName={[Function]}
        updateOccupation={[Function]}
        updatePoisonSeverityScore={[Function]}
        updatePostcode={[Function]}
        updatePregnantLactating={[Function]}
        updatePregnantStatus={[Function]}
        updatePregnantTrimester={[Function]}
        updateRiskAssessment={[Function]}
        updateSex={[Function]}
        updateSuburb={[Function]}
        updateTemplateMacro={[Function]}
        updateWeight={[Function]}
        weight=""
        weightUnits="" />,
      "_debugID": 11,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PatientView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": "editTemplate",
        },
        "props": Object {
          "age": "",
          "ageGroup": "",
          "ageUnits": "",
          "ageYears": "",
          "animalType": "",
          "category": "",
          "circumstance": "",
          "currentCase": Object {},
          "executeMacro": [Function],
          "geometry": Object {},
          "interlocutorCity": "",
          "interlocutorGeometry": Object {},
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "location": "",
          "lookupMacroTemplate": [Function],
          "macro": "",
          "medicalRecordNumber": "",
          "name": "",
          "occupation": "",
          "orgCountry": "",
          "poisonSeverityScore": "",
          "postcode": "",
          "pregnantLactating": "",
          "pregnantStatus": "",
          "pregnantTrimester": "",
          "riskAssessment": "",
          "sex": "",
          "suburb": "",
          "template": Object {},
          "topic": "",
          "updateAge": [Function],
          "updateAgeGroup": [Function],
          "updateAnimalType": [Function],
          "updateCaseTopic": [Function],
          "updateCategory": [Function],
          "updateCircumstance": [Function],
          "updateGeometry": [Function],
          "updateLocation": [Function],
          "updateLocationFromLookup": [Function],
          "updateMedicalRecordNumber": [Function],
          "updateName": [Function],
          "updateOccupation": [Function],
          "updatePoisonSeverityScore": [Function],
          "updatePostcode": [Function],
          "updatePregnantLactating": [Function],
          "updatePregnantStatus": [Function],
          "updatePregnantTrimester": [Function],
          "updateRiskAssessment": [Function],
          "updateSex": [Function],
          "updateSuburb": [Function],
          "updateTemplateMacro": [Function],
          "updateWeight": [Function],
          "weight": "",
          "weightUnits": "",
        },
        "refs": Object {},
        "state": null,
        "updateLocalityFromCaller": [Function],
        "updateLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 6,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      help={null}
                                                                      id="macro"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Macro"
                                                                                          id="pic.components.Patient.field.macro"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      style={null}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 12,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      help={null}
                                                                      id="macro"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Macro"
                                                                                          id="pic.components.Patient.field.macro"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      style={null}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PatientView
    age=""
    ageGroup=""
    ageUnits=""
    ageYears=""
    animalType=""
    category=""
    circumstance=""
    currentCase={Object {}}
    executeMacro={[Function]}
    geometry={Object {}}
    interlocutorCity=""
    interlocutorGeometry={Object {}}
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    location=""
    lookupMacroTemplate={[Function]}
    macro=""
    medicalRecordNumber=""
    name=""
    occupation=""
    orgCountry=""
    poisonSeverityScore=""
    postcode=""
    pregnantLactating=""
    pregnantStatus=""
    pregnantTrimester=""
    riskAssessment=""
    sex=""
    suburb=""
    template={Object {}}
    topic=""
    updateAge={[Function]}
    updateAgeGroup={[Function]}
    updateAnimalType={[Function]}
    updateCaseTopic={[Function]}
    updateCategory={[Function]}
    updateCircumstance={[Function]}
    updateGeometry={[Function]}
    updateLocation={[Function]}
    updateLocationFromLookup={[Function]}
    updateMedicalRecordNumber={[Function]}
    updateName={[Function]}
    updateOccupation={[Function]}
    updatePoisonSeverityScore={[Function]}
    updatePostcode={[Function]}
    updatePregnantLactating={[Function]}
    updatePregnantStatus={[Function]}
    updatePregnantTrimester={[Function]}
    updateRiskAssessment={[Function]}
    updateSex={[Function]}
    updateSuburb={[Function]}
    updateTemplateMacro={[Function]}
    updateWeight={[Function]}
    weight=""
    weightUnits="" />,
}
`;

exports[`PatientView renders the unpopulated patient tab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}>
                        <FieldGroup
                            disabled={true}
                            id="topic"
                            label={
                                <FormattedMessage
                                    defaultMessage="Topic"
                                    id="pic.components.Patient.field.topic"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="name"
                            label={
                                <FormattedMessage
                                    defaultMessage="Patient Name"
                                    id="pic.components.Patient.field.name"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={3}>
                        <FieldSelectGroup
                            disabled={true}
                            id="sex"
                            label={
                                <FormattedMessage
                                    defaultMessage="Biological Sex"
                                    id="pic.components.Patient.field.sex"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "female",
                                    },
                                    Object {
                                      "label": "male",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Â 
                        </ControlLabel>
                        <FormGroup
                            bsClass="form-group">
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="human">
                                Human
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={true}
                                inline={true}
                                name="category"
                                onChange={[Function]}
                                title=""
                                value="animal">
                                Animal
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="age"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age"
                                    id="pic.components.Patient.field.age"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageUnits"
                            label="Â "
                            noblank={true}
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "months",
                                    },
                                    Object {
                                      "label": "years",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldSelectGroup
                            disabled={true}
                            id="ageGroup"
                            label={
                                <FormattedMessage
                                    defaultMessage="Age Group"
                                    id="pic.components.Patient.field.ageGroup"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "neonate",
                                    },
                                    Object {
                                      "label": "infant",
                                    },
                                    Object {
                                      "label": "toddler",
                                    },
                                    Object {
                                      "label": "child",
                                    },
                                    Object {
                                      "label": "adolescent",
                                    },
                                    Object {
                                      "label": "adult",
                                    },
                                    Object {
                                      "label": "elderly",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FieldGroup
                            disabled={true}
                            id="weight"
                            label={
                                <FormattedMessage
                                    defaultMessage="Weight (kg)"
                                    id="pic.components.Patient.field.weight"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            type="number"
                            value="" />
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Circumstance"
                                    id="pic.components.Patient.field.circumstance"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                bodyContainer={true}
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "Unknown",
                                        },
                                        Object {
                                          "label": "Unintentional - Accidental",
                                        },
                                        Object {
                                          "label": "Unintentional - Occupational",
                                        },
                                        Object {
                                          "label": "Unintentional - Environmental",
                                        },
                                        Object {
                                          "label": "Unintentional - Transport accident",
                                        },
                                        Object {
                                          "label": "Unintentional - Fire",
                                        },
                                        Object {
                                          "label": "Unintentional - Therapeutic error",
                                        },
                                        Object {
                                          "label": "Unintentional - Misuse",
                                        },
                                        Object {
                                          "label": "Unintentional - Food Poisoning",
                                        },
                                        Object {
                                          "label": "Unintentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Unintentional - Unknown",
                                        },
                                        Object {
                                          "label": "Intentional - Suicide",
                                        },
                                        Object {
                                          "label": "Intentional - Misuse",
                                        },
                                        Object {
                                          "label": "Intentional - Abuse",
                                        },
                                        Object {
                                          "label": "Intentional - Malicious/criminal",
                                        },
                                        Object {
                                          "label": "Intentional - Abortion",
                                        },
                                        Object {
                                          "label": "Intentional - Other - see notes",
                                        },
                                        Object {
                                          "label": "Intentional - Unknown",
                                        },
                                        Object {
                                          "label": "Adverse Reaction",
                                        },
                                        Object {
                                          "label": "Other - see notes",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="occupation"
                            label={
                                <FormattedMessage
                                    defaultMessage="Occupation"
                                    id="pic.components.Patient.field.occupation"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "none",
                                    },
                                    Object {
                                      "label": "housewife / husband",
                                    },
                                    Object {
                                      "label": "agricultural worker",
                                    },
                                    Object {
                                      "label": "industrial worker",
                                    },
                                    Object {
                                      "label": "cottage industry worker",
                                    },
                                    Object {
                                      "label": "commercial",
                                    },
                                    Object {
                                      "label": "services",
                                    },
                                    Object {
                                      "label": "student",
                                    },
                                    Object {
                                      "label": "other - see notes",
                                    },
                                    Object {
                                      "label": "unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="medicalRecordNumber"
                            label={
                                <FormattedMessage
                                    defaultMessage="Hospital MRN"
                                    id="pic.components.Patient.field.mrn"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Location of Exposure
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                            <Checkbox
                                bsClass="checkbox"
                                disabled={true}
                                inline={true}
                                onChange={[Function]}
                                style={
                                    Object {
                                        "marginLeft": "1rem",
                                      }
                                }
                                title=""
                                value={true}>
                                from Caller
                            </Checkbox>
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="location"
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                <FormattedMessage
                                    defaultMessage="Location Type"
                                    id="pic.components.Patient.field.location"
                                    tagName="span"
                                    values={Object {}} />
                            </ControlLabel>
                            <Styled(OnClickOutside(Typeahead))
                                clearButton={true}
                                disabled={true}
                                onChange={[Function]}
                                options={
                                    Array [
                                        Object {
                                          "label": "",
                                        },
                                        Object {
                                          "label": "Home",
                                        },
                                        Object {
                                          "label": "Workplace",
                                        },
                                        Object {
                                          "label": "Medical - hospital",
                                        },
                                        Object {
                                          "label": "Medical - non-hospital",
                                        },
                                        Object {
                                          "label": "Veterinary clinic",
                                        },
                                        Object {
                                          "label": "Poisons Centre",
                                        },
                                        Object {
                                          "label": "Educational establishment",
                                        },
                                        Object {
                                          "label": "Enclosed public space",
                                        },
                                        Object {
                                          "label": "Open space",
                                        },
                                        Object {
                                          "label": "Mode of transport",
                                        },
                                        Object {
                                          "label": "Prison",
                                        },
                                      ]
                                }
                                selected={Array []} />
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="city"
                            label="Suburb"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="postcode"
                            label={
                                <FormattedMessage
                                    defaultMessage="Postcode of Exposure"
                                    id="pic.components.Patient.field.postcode"
                                    tagName="span"
                                    values={Object {}} />
                            }
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
            <styled.fieldset>
                <legend>
                    Poisoning Risk Assessment
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="riskassessment"
                            label="Risk Assessment"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "No Risk",
                                    },
                                    Object {
                                      "label": "Minimal Risk",
                                    },
                                    Object {
                                      "label": "Moderate Risk",
                                    },
                                    Object {
                                      "label": "High Risk",
                                    },
                                    Object {
                                      "label": "Established Poisoning",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="poisonseverityscore"
                            label="Poison Severity Score at time of Call"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "None",
                                    },
                                    Object {
                                      "label": "Minor",
                                    },
                                    Object {
                                      "label": "Moderate",
                                    },
                                    Object {
                                      "label": "Severe",
                                    },
                                    Object {
                                      "label": "Death",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}>
                                    <FieldGroup
                                          disabled={true}
                                          id="topic"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Topic"
                                                      id="pic.components.Patient.field.topic"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="name"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Patient Name"
                                                      id="pic.components.Patient.field.name"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={3}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="sex"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Biological Sex"
                                                      id="pic.components.Patient.field.sex"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "female",
                                                      },
                                                      Object {
                                                        "label": "male",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Â 
                                    </ControlLabel>
                                    <FormGroup
                                          bsClass="form-group">
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="human">
                                                Human
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={true}
                                                inline={true}
                                                name="category"
                                                onChange={[Function]}
                                                title=""
                                                value="animal">
                                                Animal
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="age"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age"
                                                      id="pic.components.Patient.field.age"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageUnits"
                                          label="Â "
                                          noblank={true}
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "months",
                                                      },
                                                      Object {
                                                        "label": "years",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="ageGroup"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Age Group"
                                                      id="pic.components.Patient.field.ageGroup"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "neonate",
                                                      },
                                                      Object {
                                                        "label": "infant",
                                                      },
                                                      Object {
                                                        "label": "toddler",
                                                      },
                                                      Object {
                                                        "label": "child",
                                                      },
                                                      Object {
                                                        "label": "adolescent",
                                                      },
                                                      Object {
                                                        "label": "adult",
                                                      },
                                                      Object {
                                                        "label": "elderly",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FieldGroup
                                          disabled={true}
                                          id="weight"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Weight (kg)"
                                                      id="pic.components.Patient.field.weight"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyPress={[Function]}
                                          type="number"
                                          value="" />
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Circumstance"
                                                      id="pic.components.Patient.field.circumstance"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                bodyContainer={true}
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "Unknown",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Accidental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Occupational",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Environmental",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Transport accident",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Fire",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Therapeutic error",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Food Poisoning",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Unintentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Suicide",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Misuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abuse",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Malicious/criminal",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Abortion",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Other - see notes",
                                                            },
                                                            Object {
                                                              "label": "Intentional - Unknown",
                                                            },
                                                            Object {
                                                              "label": "Adverse Reaction",
                                                            },
                                                            Object {
                                                              "label": "Other - see notes",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="occupation"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Occupation"
                                                      id="pic.components.Patient.field.occupation"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "none",
                                                      },
                                                      Object {
                                                        "label": "housewife / husband",
                                                      },
                                                      Object {
                                                        "label": "agricultural worker",
                                                      },
                                                      Object {
                                                        "label": "industrial worker",
                                                      },
                                                      Object {
                                                        "label": "cottage industry worker",
                                                      },
                                                      Object {
                                                        "label": "commercial",
                                                      },
                                                      Object {
                                                        "label": "services",
                                                      },
                                                      Object {
                                                        "label": "student",
                                                      },
                                                      Object {
                                                        "label": "other - see notes",
                                                      },
                                                      Object {
                                                        "label": "unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="medicalRecordNumber"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Hospital MRN"
                                                      id="pic.components.Patient.field.mrn"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Location of Exposure
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                          <Checkbox
                                                bsClass="checkbox"
                                                disabled={true}
                                                inline={true}
                                                onChange={[Function]}
                                                style={
                                                      Object {
                                                            "marginLeft": "1rem",
                                                          }
                                                }
                                                title=""
                                                value={true}>
                                                from Caller
                                          </Checkbox>
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="location"
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                <FormattedMessage
                                                      defaultMessage="Location Type"
                                                      id="pic.components.Patient.field.location"
                                                      tagName="span"
                                                      values={Object {}} />
                                          </ControlLabel>
                                          <Styled(OnClickOutside(Typeahead))
                                                clearButton={true}
                                                disabled={true}
                                                onChange={[Function]}
                                                options={
                                                      Array [
                                                            Object {
                                                              "label": "",
                                                            },
                                                            Object {
                                                              "label": "Home",
                                                            },
                                                            Object {
                                                              "label": "Workplace",
                                                            },
                                                            Object {
                                                              "label": "Medical - hospital",
                                                            },
                                                            Object {
                                                              "label": "Medical - non-hospital",
                                                            },
                                                            Object {
                                                              "label": "Veterinary clinic",
                                                            },
                                                            Object {
                                                              "label": "Poisons Centre",
                                                            },
                                                            Object {
                                                              "label": "Educational establishment",
                                                            },
                                                            Object {
                                                              "label": "Enclosed public space",
                                                            },
                                                            Object {
                                                              "label": "Open space",
                                                            },
                                                            Object {
                                                              "label": "Mode of transport",
                                                            },
                                                            Object {
                                                              "label": "Prison",
                                                            },
                                                          ]
                                                }
                                                selected={Array []} />
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="city"
                                          label="Suburb"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="postcode"
                                          label={
                                                <FormattedMessage
                                                      defaultMessage="Postcode of Exposure"
                                                      id="pic.components.Patient.field.postcode"
                                                      tagName="span"
                                                      values={Object {}} />
                                          }
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
                  <styled.fieldset>
                        <legend>
                              Poisoning Risk Assessment
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="riskassessment"
                                          label="Risk Assessment"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "No Risk",
                                                      },
                                                      Object {
                                                        "label": "Minimal Risk",
                                                      },
                                                      Object {
                                                        "label": "Moderate Risk",
                                                      },
                                                      Object {
                                                        "label": "High Risk",
                                                      },
                                                      Object {
                                                        "label": "Established Poisoning",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="poisonseverityscore"
                                          label="Poison Severity Score at time of Call"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "None",
                                                      },
                                                      Object {
                                                        "label": "Minor",
                                                      },
                                                      Object {
                                                        "label": "Moderate",
                                                      },
                                                      Object {
                                                        "label": "Severe",
                                                      },
                                                      Object {
                                                        "label": "Death",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "boilerplate.containers.NotFoundPage.header": "Page not found.",
            "pic.app.click": "Click here",
            "pic.app.mode.editTemplate": "Template Edit Mode",
            "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
            "pic.app.version": "version {version}",
            "pic.components.Case.naturalId.none": "No ID",
            "pic.components.Case.section.agents.individual": "Substance {suffix}",
            "pic.components.Case.section.agents.overview": "Overview",
            "pic.components.Case.section.agents.title": "Substances",
            "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
            "pic.components.Case.section.interlocutor.title": "Caller",
            "pic.components.Case.section.investigations.title": "Investigations",
            "pic.components.Case.section.notes": "Notes",
            "pic.components.Case.section.overview.title": "Current Status",
            "pic.components.Case.section.patient.title": "Patient",
            "pic.components.Case.section.quick.title": "Quick Entry",
            "pic.components.Case.section.treatment.title": "Treatment",
            "pic.components.Case.status.closed": "Closed",
            "pic.components.Case.status.deleted": "Deleted",
            "pic.components.Case.status.open": "Open",
            "pic.components.Case.status.reviewed": "Closed Pending Review",
            "pic.components.Case.topic.none": "No Topic",
            "pic.components.Case.type.case": "Case",
            "pic.components.Case.type.hoax": "Other",
            "pic.components.Case.type.inqury": "Inquiry",
            "pic.components.CaseList.adolescent": "Adolescent",
            "pic.components.CaseList.adult": "Adult",
            "pic.components.CaseList.animal": "Animal",
            "pic.components.CaseList.child": "Child",
            "pic.components.CaseList.comms": "Comms",
            "pic.components.CaseList.elderly": "Elderly",
            "pic.components.CaseList.human": "Human",
            "pic.components.CaseList.infant": "Infant",
            "pic.components.CaseList.item.label": "{category} - {name}",
            "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
            "pic.components.CaseList.neonate": "Neonate",
            "pic.components.CaseList.notes": "Notes",
            "pic.components.CaseList.toddler": "Toddler",
            "pic.components.CaseList.topic.none": "<no topic>",
            "pic.components.ClinicalFeatures.button.close": "Close",
            "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
            "pic.components.ClinicalFeatures.field.features": "Features",
            "pic.components.ClinicalFeatures.field.outcome": "Outcome",
            "pic.components.ClinicalFeatures.field.outcome.death": "Death",
            "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
            "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
            "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
            "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
            "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
            "pic.components.ClinicalFeatures.field.when.before": "Before Call",
            "pic.components.ClinicalFeatures.label.content.none": "No Content",
            "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
            "pic.components.ClinicalFeatures.message.none": "No Features",
            "pic.components.ClinicalFeendures.field.when.end": "End of Case",
            "pic.components.DashboardPage.action.admin": "Admin",
            "pic.components.DashboardPage.action.analytics": "Analytics",
            "pic.components.DashboardPage.action.app": "App",
            "pic.components.DashboardPage.action.menu": "Menu",
            "pic.components.DashboardPage.action.signout": "Logout",
            "pic.components.Interlocutor.communication": "Communication",
            "pic.components.Interlocutor.communication.plural": "Communications",
            "pic.components.Interlocutor.communication.type": "Type",
            "pic.components.Interlocutor.field.category": "Caller Category",
            "pic.components.Interlocutor.field.contact": "Contact Detail",
            "pic.components.Interlocutor.field.detail.default": "Caller Detail",
            "pic.components.Interlocutor.field.detail.email": "Caller Email",
            "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
            "pic.components.Interlocutor.field.direction": "Direction",
            "pic.components.Interlocutor.field.medium.type": "Communication Type",
            "pic.components.Interlocutor.field.name": "Caller Name",
            "pic.components.Interlocutor.field.organisation.location": "Location",
            "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
            "pic.components.Interlocutor.history.none": "Change history unavailable",
            "pic.components.Interlocutor.section.caller": "Caller",
            "pic.components.Interlocutor.section.organisation": "Organisation",
            "pic.components.Investigations.requests.content.none": "No request content",
            "pic.components.Investigations.requests.label.pending": "PENDING",
            "pic.components.Investigations.requests.label.result": "RESULT",
            "pic.components.Investigations.requests.message.none": "No Investigations Requested",
            "pic.components.Investigations.result.add": "Add Result",
            "pic.components.Investigations.results.content.none": "No result content",
            "pic.components.Investigations.results.message.none": "No results",
            "pic.components.Overview.communication.interlocutor.name": "Caller:",
            "pic.components.Overview.communication.spi.name": "SPI:",
            "pic.components.Patient.field.age": "Age",
            "pic.components.Patient.field.ageGroup": "Age Group",
            "pic.components.Patient.field.ageYears": "Age in Years",
            "pic.components.Patient.field.animalType": "Animal Type",
            "pic.components.Patient.field.circumstance": "Circumstance",
            "pic.components.Patient.field.location": "Location Type",
            "pic.components.Patient.field.macro": "Macro",
            "pic.components.Patient.field.macro.invalid": "This macro already exists.",
            "pic.components.Patient.field.macro.required": "A macro is required.",
            "pic.components.Patient.field.mrn": "Hospital MRN",
            "pic.components.Patient.field.name": "Patient Name",
            "pic.components.Patient.field.occupation": "Occupation",
            "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
            "pic.components.Patient.field.postcode": "Postcode of Exposure",
            "pic.components.Patient.field.pregnancy.lactating": "Lactating",
            "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
            "pic.components.Patient.field.pregnancy.trimester": "Trimester",
            "pic.components.Patient.field.riskassessment": "Risk Assessment",
            "pic.components.Patient.field.sex": "Biological Sex",
            "pic.components.Patient.field.topic": "Topic",
            "pic.components.Patient.field.weight": "Weight (kg)",
            "pic.components.Patient.section.exposure": "Exposure",
            "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
            "pic.components.TemplateList.action.template.delete": "Delete Template",
            "pic.components.TemplateList.action.template.edit": "Edit Template",
            "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
            "pic.components.TemplateList.templates.none": "No Templates",
            "pic.components.Treatment.button.referral.add": "Add Referral",
            "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
            "pic.components.Treatment.field.disposition": "Disposition",
            "pic.components.Treatment.field.treatments": "Treatments",
            "pic.components.Treatment.label.referee": "Refer to Specialist",
            "pic.components.Treatment.label.referrals.none": "No Referrals",
            "pic.components.Treatment.label.specialty": "Specialty",
            "pic.components.Treatment.label.treatment.none": "No Treatments",
            "pic.components.Treatment.message.none": "No Treatments",
            "pic.components.Treatment.referrals": "Referrals",
            "pic.components.Treatment.treatment": "Treatment",
            "pic.components.Treatment.treatment.plural": "Treatments",
            "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
          },
          "now": [Function],
        },
      },
      "_currentElement": <PatientView
        age=""
        ageGroup=""
        ageUnits=""
        ageYears=""
        animalType=""
        category=""
        circumstance=""
        currentCase={Object {}}
        executeMacro={[Function]}
        geometry={Object {}}
        interlocutorCity=""
        interlocutorGeometry={Object {}}
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        location=""
        lookupMacroTemplate={[Function]}
        macro=""
        medicalRecordNumber=""
        name=""
        occupation=""
        orgCountry=""
        poisonSeverityScore=""
        postcode=""
        pregnantLactating=""
        pregnantStatus=""
        pregnantTrimester=""
        riskAssessment=""
        sex=""
        suburb=""
        template={Object {}}
        topic=""
        updateAge={[Function]}
        updateAgeGroup={[Function]}
        updateAnimalType={[Function]}
        updateCaseTopic={[Function]}
        updateCategory={[Function]}
        updateCircumstance={[Function]}
        updateGeometry={[Function]}
        updateLocation={[Function]}
        updateLocationFromLookup={[Function]}
        updateMedicalRecordNumber={[Function]}
        updateName={[Function]}
        updateOccupation={[Function]}
        updatePoisonSeverityScore={[Function]}
        updatePostcode={[Function]}
        updatePregnantLactating={[Function]}
        updatePregnantStatus={[Function]}
        updatePregnantTrimester={[Function]}
        updateRiskAssessment={[Function]}
        updateSex={[Function]}
        updateSuburb={[Function]}
        updateTemplateMacro={[Function]}
        updateWeight={[Function]}
        weight=""
        weightUnits="" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PatientView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "age": "",
          "ageGroup": "",
          "ageUnits": "",
          "ageYears": "",
          "animalType": "",
          "category": "",
          "circumstance": "",
          "currentCase": Object {},
          "executeMacro": [Function],
          "geometry": Object {},
          "interlocutorCity": "",
          "interlocutorGeometry": Object {},
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "location": "",
          "lookupMacroTemplate": [Function],
          "macro": "",
          "medicalRecordNumber": "",
          "name": "",
          "occupation": "",
          "orgCountry": "",
          "poisonSeverityScore": "",
          "postcode": "",
          "pregnantLactating": "",
          "pregnantStatus": "",
          "pregnantTrimester": "",
          "riskAssessment": "",
          "sex": "",
          "suburb": "",
          "template": Object {},
          "topic": "",
          "updateAge": [Function],
          "updateAgeGroup": [Function],
          "updateAnimalType": [Function],
          "updateCaseTopic": [Function],
          "updateCategory": [Function],
          "updateCircumstance": [Function],
          "updateGeometry": [Function],
          "updateLocation": [Function],
          "updateLocationFromLookup": [Function],
          "updateMedicalRecordNumber": [Function],
          "updateName": [Function],
          "updateOccupation": [Function],
          "updatePoisonSeverityScore": [Function],
          "updatePostcode": [Function],
          "updatePregnantLactating": [Function],
          "updatePregnantStatus": [Function],
          "updatePregnantTrimester": [Function],
          "updateRiskAssessment": [Function],
          "updateSex": [Function],
          "updateSuburb": [Function],
          "updateTemplateMacro": [Function],
          "updateWeight": [Function],
          "weight": "",
          "weightUnits": "",
        },
        "refs": Object {},
        "state": null,
        "updateLocalityFromCaller": [Function],
        "updateLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 2,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={12}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="topic"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Topic"
                                                                                          id="pic.components.Patient.field.topic"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="name"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Patient Name"
                                                                                          id="pic.components.Patient.field.name"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={3}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="sex"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Biological Sex"
                                                                                          id="pic.components.Patient.field.sex"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "female",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "male",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Â 
                                                            </ControlLabel>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="human">
                                                                                Human
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={true}
                                                                                inline={true}
                                                                                name="category"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="animal">
                                                                                Animal
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="age"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age"
                                                                                          id="pic.components.Patient.field.age"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageUnits"
                                                                      label="Â "
                                                                      noblank={true}
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "months",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "years",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="ageGroup"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Age Group"
                                                                                          id="pic.components.Patient.field.ageGroup"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "neonate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "infant",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "toddler",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "child",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adolescent",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "adult",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "elderly",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="weight"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Weight (kg)"
                                                                                          id="pic.components.Patient.field.weight"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      type="number"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Circumstance"
                                                                                          id="pic.components.Patient.field.circumstance"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                bodyContainer={true}
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Accidental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Occupational",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Environmental",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Transport accident",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Fire",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Therapeutic error",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Food Poisoning",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Unintentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Suicide",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Misuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abuse",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Malicious/criminal",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Abortion",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Other - see notes",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Intentional - Unknown",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Adverse Reaction",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Other - see notes",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="occupation"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Occupation"
                                                                                          id="pic.components.Patient.field.occupation"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "none",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "housewife / husband",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "agricultural worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "industrial worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "cottage industry worker",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "commercial",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "services",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "student",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="medicalRecordNumber"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Hospital MRN"
                                                                                          id="pic.components.Patient.field.mrn"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Location of Exposure
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                                      <Checkbox
                                                                                bsClass="checkbox"
                                                                                disabled={true}
                                                                                inline={true}
                                                                                onChange={[Function]}
                                                                                style={
                                                                                          Object {
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                                                }
                                                                                title=""
                                                                                value={true}>
                                                                                from Caller
                                                                      </Checkbox>
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="location"
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                <FormattedMessage
                                                                                          defaultMessage="Location Type"
                                                                                          id="pic.components.Patient.field.location"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      </ControlLabel>
                                                                      <Styled(OnClickOutside(Typeahead))
                                                                                clearButton={true}
                                                                                disabled={true}
                                                                                onChange={[Function]}
                                                                                options={
                                                                                          Array [
                                                                                                    Object {
                                                                                                      "label": "",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Home",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Workplace",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Medical - non-hospital",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Veterinary clinic",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Poisons Centre",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Educational establishment",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Enclosed public space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Open space",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Mode of transport",
                                                                                                    },
                                                                                                    Object {
                                                                                                      "label": "Prison",
                                                                                                    },
                                                                                                  ]
                                                                                }
                                                                                selected={Array []} />
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="city"
                                                                      label="Suburb"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="postcode"
                                                                      label={
                                                                                <FormattedMessage
                                                                                          defaultMessage="Postcode of Exposure"
                                                                                          id="pic.components.Patient.field.postcode"
                                                                                          tagName="span"
                                                                                          values={Object {}} />
                                                                      }
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                              <styled.fieldset>
                                        <legend>
                                                  Poisoning Risk Assessment
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="riskassessment"
                                                                      label="Risk Assessment"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "No Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minimal Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "High Risk",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Established Poisoning",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="poisonseverityscore"
                                                                      label="Poison Severity Score at time of Call"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "None",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Minor",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Moderate",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Severe",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Death",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PatientView
    age=""
    ageGroup=""
    ageUnits=""
    ageYears=""
    animalType=""
    category=""
    circumstance=""
    currentCase={Object {}}
    executeMacro={[Function]}
    geometry={Object {}}
    interlocutorCity=""
    interlocutorGeometry={Object {}}
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    location=""
    lookupMacroTemplate={[Function]}
    macro=""
    medicalRecordNumber=""
    name=""
    occupation=""
    orgCountry=""
    poisonSeverityScore=""
    postcode=""
    pregnantLactating=""
    pregnantStatus=""
    pregnantTrimester=""
    riskAssessment=""
    sex=""
    suburb=""
    template={Object {}}
    topic=""
    updateAge={[Function]}
    updateAgeGroup={[Function]}
    updateAnimalType={[Function]}
    updateCaseTopic={[Function]}
    updateCategory={[Function]}
    updateCircumstance={[Function]}
    updateGeometry={[Function]}
    updateLocation={[Function]}
    updateLocationFromLookup={[Function]}
    updateMedicalRecordNumber={[Function]}
    updateName={[Function]}
    updateOccupation={[Function]}
    updatePoisonSeverityScore={[Function]}
    updatePostcode={[Function]}
    updatePregnantLactating={[Function]}
    updatePregnantStatus={[Function]}
    updatePregnantTrimester={[Function]}
    updateRiskAssessment={[Function]}
    updateSex={[Function]}
    updateSuburb={[Function]}
    updateTemplateMacro={[Function]}
    updateWeight={[Function]}
    weight=""
    weightUnits="" />,
}
`;
