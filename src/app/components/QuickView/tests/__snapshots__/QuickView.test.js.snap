exports[`QuickView does not render the Age, Circumstance or Risk fields for non-human patients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    Caller
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorName"
                            label="Caller Name"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorMediumDetail"
                            label="Phone"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                Direction
                            </ControlLabel>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="incoming">
                                Incoming
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="outgoing">
                                Outgoing
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="interlocutorOrganisation"
                            initialValue=""
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorPostcode"
                            label="Postcode"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="category"
                            label="Caller Category"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Victim/Patient",
                                    },
                                    Object {
                                      "group": "Family member",
                                      "options": Array [
                                        Object {
                                          "label": "Family Member parent",
                                        },
                                        Object {
                                          "label": "Family Member grandparent",
                                        },
                                        Object {
                                          "label": "Family Member partner/spouse",
                                        },
                                        Object {
                                          "label": "Family Member other",
                                        },
                                        Object {
                                          "label": "Friend",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Health personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Medical Professional doctor",
                                        },
                                        Object {
                                          "label": "Medical Professional nurse",
                                        },
                                        Object {
                                          "label": "Medical Professional pharmacist",
                                        },
                                        Object {
                                          "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                        },
                                        Object {
                                          "label": "Ambulance officer",
                                        },
                                        Object {
                                          "label": "Veterinary Personnel",
                                        },
                                        Object {
                                          "label": "Carer",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Other personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Teacher or Educational worker",
                                        },
                                        Object {
                                          "label": "Police",
                                        },
                                        Object {
                                          "label": "Counsellor, eg Lifeline",
                                        },
                                      ],
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                    Object {
                                      "label": "Unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              Caller
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorName"
                                          label="Caller Name"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorMediumDetail"
                                          label="Phone"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                Direction
                                          </ControlLabel>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="incoming">
                                                Incoming
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="outgoing">
                                                Outgoing
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="interlocutorOrganisation"
                                          initialValue=""
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorPostcode"
                                          label="Postcode"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="category"
                                          label="Caller Category"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Victim/Patient",
                                                      },
                                                      Object {
                                                        "group": "Family member",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Family Member parent",
                                                          },
                                                          Object {
                                                            "label": "Family Member grandparent",
                                                          },
                                                          Object {
                                                            "label": "Family Member partner/spouse",
                                                          },
                                                          Object {
                                                            "label": "Family Member other",
                                                          },
                                                          Object {
                                                            "label": "Friend",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Health personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Medical Professional doctor",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional nurse",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional pharmacist",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                          },
                                                          Object {
                                                            "label": "Ambulance officer",
                                                          },
                                                          Object {
                                                            "label": "Veterinary Personnel",
                                                          },
                                                          Object {
                                                            "label": "Carer",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Other personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Teacher or Educational worker",
                                                          },
                                                          Object {
                                                            "label": "Police",
                                                          },
                                                          Object {
                                                            "label": "Counsellor, eg Lifeline",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                      Object {
                                                        "label": "Unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory="animal"
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type=""
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "animal",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 6,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory="animal"
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type=""
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;

exports[`QuickView does not render the agent quantity or exposure section for inquiries 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={true}
                    bsClass="radio"
                    checked={true}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={0}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    Caller
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorName"
                            label="Caller Name"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorMediumDetail"
                            label="Phone"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                Direction
                            </ControlLabel>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="incoming">
                                Incoming
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="outgoing">
                                Outgoing
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="interlocutorOrganisation"
                            initialValue=""
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorPostcode"
                            label="Postcode"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="category"
                            label="Caller Category"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Victim/Patient",
                                    },
                                    Object {
                                      "group": "Family member",
                                      "options": Array [
                                        Object {
                                          "label": "Family Member parent",
                                        },
                                        Object {
                                          "label": "Family Member grandparent",
                                        },
                                        Object {
                                          "label": "Family Member partner/spouse",
                                        },
                                        Object {
                                          "label": "Family Member other",
                                        },
                                        Object {
                                          "label": "Friend",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Health personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Medical Professional doctor",
                                        },
                                        Object {
                                          "label": "Medical Professional nurse",
                                        },
                                        Object {
                                          "label": "Medical Professional pharmacist",
                                        },
                                        Object {
                                          "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                        },
                                        Object {
                                          "label": "Ambulance officer",
                                        },
                                        Object {
                                          "label": "Veterinary Personnel",
                                        },
                                        Object {
                                          "label": "Carer",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Other personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Teacher or Educational worker",
                                        },
                                        Object {
                                          "label": "Police",
                                        },
                                        Object {
                                          "label": "Counsellor, eg Lifeline",
                                        },
                                      ],
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                    Object {
                                      "label": "Unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={true}
                              bsClass="radio"
                              checked={true}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={0}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              Caller
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorName"
                                          label="Caller Name"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorMediumDetail"
                                          label="Phone"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                Direction
                                          </ControlLabel>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="incoming">
                                                Incoming
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="outgoing">
                                                Outgoing
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="interlocutorOrganisation"
                                          initialValue=""
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorPostcode"
                                          label="Postcode"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="category"
                                          label="Caller Category"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Victim/Patient",
                                                      },
                                                      Object {
                                                        "group": "Family member",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Family Member parent",
                                                          },
                                                          Object {
                                                            "label": "Family Member grandparent",
                                                          },
                                                          Object {
                                                            "label": "Family Member partner/spouse",
                                                          },
                                                          Object {
                                                            "label": "Family Member other",
                                                          },
                                                          Object {
                                                            "label": "Friend",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Health personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Medical Professional doctor",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional nurse",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional pharmacist",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                          },
                                                          Object {
                                                            "label": "Ambulance officer",
                                                          },
                                                          Object {
                                                            "label": "Veterinary Personnel",
                                                          },
                                                          Object {
                                                            "label": "Carer",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Other personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Teacher or Educational worker",
                                                          },
                                                          Object {
                                                            "label": "Police",
                                                          },
                                                          Object {
                                                            "label": "Counsellor, eg Lifeline",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                      Object {
                                                        "label": "Unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory=""
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type="inquiry"
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "inquiry",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={true}
                                                  bsClass="radio"
                                                  checked={true}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={0}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 8,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={true}
                                                  bsClass="radio"
                                                  checked={true}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={0}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory=""
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type="inquiry"
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;

exports[`QuickView does not render the caller section for template mode 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                help={
                    <FormattedMessage
                        defaultMessage="A macro is required."
                        id="pic.components.Patient.field.macro.required"
                        tagName="span"
                        values={Object {}} />
                }
                id="macro"
                label={
                    <FormattedMessage
                        defaultMessage="Macro"
                        id="pic.components.Patient.field.macro"
                        tagName="span"
                        values={Object {}} />
                }
                onChange={[Function]}
                style={
                    Object {
                        "border": "1px solid #ff0000",
                      }
                }
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        help={
                              <FormattedMessage
                                    defaultMessage="A macro is required."
                                    id="pic.components.Patient.field.macro.required"
                                    tagName="span"
                                    values={Object {}} />
                        }
                        id="macro"
                        label={
                              <FormattedMessage
                                    defaultMessage="Macro"
                                    id="pic.components.Patient.field.macro"
                                    tagName="span"
                                    values={Object {}} />
                        }
                        onChange={[Function]}
                        style={
                              Object {
                                    "border": "1px solid #ff0000",
                                  }
                        }
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
      "uiMode": "editTemplate",
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "boilerplate.containers.NotFoundPage.header": "Page not found.",
            "pic.app.click": "Click here",
            "pic.app.mode.editTemplate": "Template Edit Mode",
            "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
            "pic.app.version": "version {version}",
            "pic.components.Case.naturalId.none": "No ID",
            "pic.components.Case.section.agents.individual": "Substance {suffix}",
            "pic.components.Case.section.agents.overview": "Overview",
            "pic.components.Case.section.agents.title": "Substances",
            "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
            "pic.components.Case.section.interlocutor.title": "Caller",
            "pic.components.Case.section.investigations.title": "Investigations",
            "pic.components.Case.section.notes": "Notes",
            "pic.components.Case.section.overview.title": "Current Status",
            "pic.components.Case.section.patient.title": "Patient",
            "pic.components.Case.section.quick.title": "Quick Entry",
            "pic.components.Case.section.treatment.title": "Treatment",
            "pic.components.Case.status.closed": "Closed",
            "pic.components.Case.status.deleted": "Deleted",
            "pic.components.Case.status.open": "Open",
            "pic.components.Case.status.reviewed": "Closed Pending Review",
            "pic.components.Case.topic.none": "No Topic",
            "pic.components.Case.type.case": "Case",
            "pic.components.Case.type.hoax": "Other",
            "pic.components.Case.type.inqury": "Inquiry",
            "pic.components.CaseList.adolescent": "Adolescent",
            "pic.components.CaseList.adult": "Adult",
            "pic.components.CaseList.animal": "Animal",
            "pic.components.CaseList.child": "Child",
            "pic.components.CaseList.comms": "Comms",
            "pic.components.CaseList.elderly": "Elderly",
            "pic.components.CaseList.human": "Human",
            "pic.components.CaseList.infant": "Infant",
            "pic.components.CaseList.item.label": "{category} - {name}",
            "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
            "pic.components.CaseList.neonate": "Neonate",
            "pic.components.CaseList.notes": "Notes",
            "pic.components.CaseList.toddler": "Toddler",
            "pic.components.CaseList.topic.none": "<no topic>",
            "pic.components.ClinicalFeatures.button.close": "Close",
            "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
            "pic.components.ClinicalFeatures.field.features": "Features",
            "pic.components.ClinicalFeatures.field.outcome": "Outcome",
            "pic.components.ClinicalFeatures.field.outcome.death": "Death",
            "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
            "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
            "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
            "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
            "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
            "pic.components.ClinicalFeatures.field.when.before": "Before Call",
            "pic.components.ClinicalFeatures.label.content.none": "No Content",
            "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
            "pic.components.ClinicalFeatures.message.none": "No Features",
            "pic.components.ClinicalFeendures.field.when.end": "End of Case",
            "pic.components.DashboardPage.action.admin": "Admin",
            "pic.components.DashboardPage.action.analytics": "Analytics",
            "pic.components.DashboardPage.action.app": "App",
            "pic.components.DashboardPage.action.menu": "Menu",
            "pic.components.DashboardPage.action.signout": "Logout",
            "pic.components.Interlocutor.communication": "Communication",
            "pic.components.Interlocutor.communication.plural": "Communications",
            "pic.components.Interlocutor.communication.type": "Type",
            "pic.components.Interlocutor.field.category": "Caller Category",
            "pic.components.Interlocutor.field.contact": "Contact Detail",
            "pic.components.Interlocutor.field.detail.default": "Caller Detail",
            "pic.components.Interlocutor.field.detail.email": "Caller Email",
            "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
            "pic.components.Interlocutor.field.direction": "Direction",
            "pic.components.Interlocutor.field.medium.type": "Communication Type",
            "pic.components.Interlocutor.field.name": "Caller Name",
            "pic.components.Interlocutor.field.organisation.location": "Location",
            "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
            "pic.components.Interlocutor.history.none": "Change history unavailable",
            "pic.components.Interlocutor.section.caller": "Caller",
            "pic.components.Interlocutor.section.organisation": "Organisation",
            "pic.components.Investigations.requests.content.none": "No request content",
            "pic.components.Investigations.requests.label.pending": "PENDING",
            "pic.components.Investigations.requests.label.result": "RESULT",
            "pic.components.Investigations.requests.message.none": "No Investigations Requested",
            "pic.components.Investigations.result.add": "Add Result",
            "pic.components.Investigations.results.content.none": "No result content",
            "pic.components.Investigations.results.message.none": "No results",
            "pic.components.Overview.communication.interlocutor.name": "Caller:",
            "pic.components.Overview.communication.spi.name": "SPI:",
            "pic.components.Patient.field.age": "Age",
            "pic.components.Patient.field.ageGroup": "Age Group",
            "pic.components.Patient.field.ageYears": "Age in Years",
            "pic.components.Patient.field.animalType": "Animal Type",
            "pic.components.Patient.field.circumstance": "Circumstance",
            "pic.components.Patient.field.location": "Location Type",
            "pic.components.Patient.field.macro": "Macro",
            "pic.components.Patient.field.macro.invalid": "This macro already exists.",
            "pic.components.Patient.field.macro.required": "A macro is required.",
            "pic.components.Patient.field.mrn": "Hospital MRN",
            "pic.components.Patient.field.name": "Patient Name",
            "pic.components.Patient.field.occupation": "Occupation",
            "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
            "pic.components.Patient.field.postcode": "Postcode of Exposure",
            "pic.components.Patient.field.pregnancy.lactating": "Lactating",
            "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
            "pic.components.Patient.field.pregnancy.trimester": "Trimester",
            "pic.components.Patient.field.riskassessment": "Risk Assessment",
            "pic.components.Patient.field.sex": "Biological Sex",
            "pic.components.Patient.field.topic": "Topic",
            "pic.components.Patient.field.weight": "Weight (kg)",
            "pic.components.Patient.section.exposure": "Exposure",
            "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
            "pic.components.TemplateList.action.template.delete": "Delete Template",
            "pic.components.TemplateList.action.template.edit": "Edit Template",
            "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
            "pic.components.TemplateList.templates.none": "No Templates",
            "pic.components.Treatment.button.referral.add": "Add Referral",
            "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
            "pic.components.Treatment.field.disposition": "Disposition",
            "pic.components.Treatment.field.treatments": "Treatments",
            "pic.components.Treatment.label.referee": "Refer to Specialist",
            "pic.components.Treatment.label.referrals.none": "No Referrals",
            "pic.components.Treatment.label.specialty": "Specialty",
            "pic.components.Treatment.label.treatment.none": "No Treatments",
            "pic.components.Treatment.message.none": "No Treatments",
            "pic.components.Treatment.referrals": "Referrals",
            "pic.components.Treatment.treatment": "Treatment",
            "pic.components.Treatment.treatment.plural": "Treatments",
            "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
          },
          "now": [Function],
        },
        "uiMode": "editTemplate",
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory=""
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type=""
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 15,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": "editTemplate",
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 8,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        help={
                                                  <FormattedMessage
                                                            defaultMessage="A macro is required."
                                                            id="pic.components.Patient.field.macro.required"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        id="macro"
                                        label={
                                                  <FormattedMessage
                                                            defaultMessage="Macro"
                                                            id="pic.components.Patient.field.macro"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        onChange={[Function]}
                                        style={
                                                  Object {
                                                            "border": "1px solid #ff0000",
                                                          }
                                        }
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 16,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        help={
                                                  <FormattedMessage
                                                            defaultMessage="A macro is required."
                                                            id="pic.components.Patient.field.macro.required"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        id="macro"
                                        label={
                                                  <FormattedMessage
                                                            defaultMessage="Macro"
                                                            id="pic.components.Patient.field.macro"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        onChange={[Function]}
                                        style={
                                                  Object {
                                                            "border": "1px solid #ff0000",
                                                          }
                                        }
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory=""
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type=""
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;

exports[`QuickView renders the Animal Type field for non-human patients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    Caller
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorName"
                            label="Caller Name"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorMediumDetail"
                            label="Phone"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                Direction
                            </ControlLabel>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="incoming">
                                Incoming
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="outgoing">
                                Outgoing
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="interlocutorOrganisation"
                            initialValue=""
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorPostcode"
                            label="Postcode"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="category"
                            label="Caller Category"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Victim/Patient",
                                    },
                                    Object {
                                      "group": "Family member",
                                      "options": Array [
                                        Object {
                                          "label": "Family Member parent",
                                        },
                                        Object {
                                          "label": "Family Member grandparent",
                                        },
                                        Object {
                                          "label": "Family Member partner/spouse",
                                        },
                                        Object {
                                          "label": "Family Member other",
                                        },
                                        Object {
                                          "label": "Friend",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Health personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Medical Professional doctor",
                                        },
                                        Object {
                                          "label": "Medical Professional nurse",
                                        },
                                        Object {
                                          "label": "Medical Professional pharmacist",
                                        },
                                        Object {
                                          "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                        },
                                        Object {
                                          "label": "Ambulance officer",
                                        },
                                        Object {
                                          "label": "Veterinary Personnel",
                                        },
                                        Object {
                                          "label": "Carer",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Other personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Teacher or Educational worker",
                                        },
                                        Object {
                                          "label": "Police",
                                        },
                                        Object {
                                          "label": "Counsellor, eg Lifeline",
                                        },
                                      ],
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                    Object {
                                      "label": "Unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              Caller
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorName"
                                          label="Caller Name"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorMediumDetail"
                                          label="Phone"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                Direction
                                          </ControlLabel>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="incoming">
                                                Incoming
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="outgoing">
                                                Outgoing
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="interlocutorOrganisation"
                                          initialValue=""
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorPostcode"
                                          label="Postcode"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="category"
                                          label="Caller Category"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Victim/Patient",
                                                      },
                                                      Object {
                                                        "group": "Family member",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Family Member parent",
                                                          },
                                                          Object {
                                                            "label": "Family Member grandparent",
                                                          },
                                                          Object {
                                                            "label": "Family Member partner/spouse",
                                                          },
                                                          Object {
                                                            "label": "Family Member other",
                                                          },
                                                          Object {
                                                            "label": "Friend",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Health personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Medical Professional doctor",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional nurse",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional pharmacist",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                          },
                                                          Object {
                                                            "label": "Ambulance officer",
                                                          },
                                                          Object {
                                                            "label": "Veterinary Personnel",
                                                          },
                                                          Object {
                                                            "label": "Carer",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Other personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Teacher or Educational worker",
                                                          },
                                                          Object {
                                                            "label": "Police",
                                                          },
                                                          Object {
                                                            "label": "Counsellor, eg Lifeline",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                      Object {
                                                        "label": "Unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "uiMode": undefined,
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory="animal"
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type=""
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "animal",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 4,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory="animal"
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type=""
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;

exports[`QuickView renders the macro field for template mode 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                help={
                    <FormattedMessage
                        defaultMessage="A macro is required."
                        id="pic.components.Patient.field.macro.required"
                        tagName="span"
                        values={Object {}} />
                }
                id="macro"
                label={
                    <FormattedMessage
                        defaultMessage="Macro"
                        id="pic.components.Patient.field.macro"
                        tagName="span"
                        values={Object {}} />
                }
                onChange={[Function]}
                style={
                    Object {
                        "border": "1px solid #ff0000",
                      }
                }
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        help={
                              <FormattedMessage
                                    defaultMessage="A macro is required."
                                    id="pic.components.Patient.field.macro.required"
                                    tagName="span"
                                    values={Object {}} />
                        }
                        id="macro"
                        label={
                              <FormattedMessage
                                    defaultMessage="Macro"
                                    id="pic.components.Patient.field.macro"
                                    tagName="span"
                                    values={Object {}} />
                        }
                        onChange={[Function]}
                        style={
                              Object {
                                    "border": "1px solid #ff0000",
                                  }
                        }
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
      "uiMode": "editTemplate",
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "boilerplate.containers.NotFoundPage.header": "Page not found.",
            "pic.app.click": "Click here",
            "pic.app.mode.editTemplate": "Template Edit Mode",
            "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
            "pic.app.version": "version {version}",
            "pic.components.Case.naturalId.none": "No ID",
            "pic.components.Case.section.agents.individual": "Substance {suffix}",
            "pic.components.Case.section.agents.overview": "Overview",
            "pic.components.Case.section.agents.title": "Substances",
            "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
            "pic.components.Case.section.interlocutor.title": "Caller",
            "pic.components.Case.section.investigations.title": "Investigations",
            "pic.components.Case.section.notes": "Notes",
            "pic.components.Case.section.overview.title": "Current Status",
            "pic.components.Case.section.patient.title": "Patient",
            "pic.components.Case.section.quick.title": "Quick Entry",
            "pic.components.Case.section.treatment.title": "Treatment",
            "pic.components.Case.status.closed": "Closed",
            "pic.components.Case.status.deleted": "Deleted",
            "pic.components.Case.status.open": "Open",
            "pic.components.Case.status.reviewed": "Closed Pending Review",
            "pic.components.Case.topic.none": "No Topic",
            "pic.components.Case.type.case": "Case",
            "pic.components.Case.type.hoax": "Other",
            "pic.components.Case.type.inqury": "Inquiry",
            "pic.components.CaseList.adolescent": "Adolescent",
            "pic.components.CaseList.adult": "Adult",
            "pic.components.CaseList.animal": "Animal",
            "pic.components.CaseList.child": "Child",
            "pic.components.CaseList.comms": "Comms",
            "pic.components.CaseList.elderly": "Elderly",
            "pic.components.CaseList.human": "Human",
            "pic.components.CaseList.infant": "Infant",
            "pic.components.CaseList.item.label": "{category} - {name}",
            "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
            "pic.components.CaseList.neonate": "Neonate",
            "pic.components.CaseList.notes": "Notes",
            "pic.components.CaseList.toddler": "Toddler",
            "pic.components.CaseList.topic.none": "<no topic>",
            "pic.components.ClinicalFeatures.button.close": "Close",
            "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
            "pic.components.ClinicalFeatures.field.features": "Features",
            "pic.components.ClinicalFeatures.field.outcome": "Outcome",
            "pic.components.ClinicalFeatures.field.outcome.death": "Death",
            "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
            "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
            "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
            "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
            "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
            "pic.components.ClinicalFeatures.field.when.before": "Before Call",
            "pic.components.ClinicalFeatures.label.content.none": "No Content",
            "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
            "pic.components.ClinicalFeatures.message.none": "No Features",
            "pic.components.ClinicalFeendures.field.when.end": "End of Case",
            "pic.components.DashboardPage.action.admin": "Admin",
            "pic.components.DashboardPage.action.analytics": "Analytics",
            "pic.components.DashboardPage.action.app": "App",
            "pic.components.DashboardPage.action.menu": "Menu",
            "pic.components.DashboardPage.action.signout": "Logout",
            "pic.components.Interlocutor.communication": "Communication",
            "pic.components.Interlocutor.communication.plural": "Communications",
            "pic.components.Interlocutor.communication.type": "Type",
            "pic.components.Interlocutor.field.category": "Caller Category",
            "pic.components.Interlocutor.field.contact": "Contact Detail",
            "pic.components.Interlocutor.field.detail.default": "Caller Detail",
            "pic.components.Interlocutor.field.detail.email": "Caller Email",
            "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
            "pic.components.Interlocutor.field.direction": "Direction",
            "pic.components.Interlocutor.field.medium.type": "Communication Type",
            "pic.components.Interlocutor.field.name": "Caller Name",
            "pic.components.Interlocutor.field.organisation.location": "Location",
            "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
            "pic.components.Interlocutor.history.none": "Change history unavailable",
            "pic.components.Interlocutor.section.caller": "Caller",
            "pic.components.Interlocutor.section.organisation": "Organisation",
            "pic.components.Investigations.requests.content.none": "No request content",
            "pic.components.Investigations.requests.label.pending": "PENDING",
            "pic.components.Investigations.requests.label.result": "RESULT",
            "pic.components.Investigations.requests.message.none": "No Investigations Requested",
            "pic.components.Investigations.result.add": "Add Result",
            "pic.components.Investigations.results.content.none": "No result content",
            "pic.components.Investigations.results.message.none": "No results",
            "pic.components.Overview.communication.interlocutor.name": "Caller:",
            "pic.components.Overview.communication.spi.name": "SPI:",
            "pic.components.Patient.field.age": "Age",
            "pic.components.Patient.field.ageGroup": "Age Group",
            "pic.components.Patient.field.ageYears": "Age in Years",
            "pic.components.Patient.field.animalType": "Animal Type",
            "pic.components.Patient.field.circumstance": "Circumstance",
            "pic.components.Patient.field.location": "Location Type",
            "pic.components.Patient.field.macro": "Macro",
            "pic.components.Patient.field.macro.invalid": "This macro already exists.",
            "pic.components.Patient.field.macro.required": "A macro is required.",
            "pic.components.Patient.field.mrn": "Hospital MRN",
            "pic.components.Patient.field.name": "Patient Name",
            "pic.components.Patient.field.occupation": "Occupation",
            "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
            "pic.components.Patient.field.postcode": "Postcode of Exposure",
            "pic.components.Patient.field.pregnancy.lactating": "Lactating",
            "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
            "pic.components.Patient.field.pregnancy.trimester": "Trimester",
            "pic.components.Patient.field.riskassessment": "Risk Assessment",
            "pic.components.Patient.field.sex": "Biological Sex",
            "pic.components.Patient.field.topic": "Topic",
            "pic.components.Patient.field.weight": "Weight (kg)",
            "pic.components.Patient.section.exposure": "Exposure",
            "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
            "pic.components.TemplateList.action.template.delete": "Delete Template",
            "pic.components.TemplateList.action.template.edit": "Edit Template",
            "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
            "pic.components.TemplateList.templates.none": "No Templates",
            "pic.components.Treatment.button.referral.add": "Add Referral",
            "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
            "pic.components.Treatment.field.disposition": "Disposition",
            "pic.components.Treatment.field.treatments": "Treatments",
            "pic.components.Treatment.label.referee": "Refer to Specialist",
            "pic.components.Treatment.label.referrals.none": "No Referrals",
            "pic.components.Treatment.label.specialty": "Specialty",
            "pic.components.Treatment.label.treatment.none": "No Treatments",
            "pic.components.Treatment.message.none": "No Treatments",
            "pic.components.Treatment.referrals": "Referrals",
            "pic.components.Treatment.treatment": "Treatment",
            "pic.components.Treatment.treatment.plural": "Treatments",
            "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
          },
          "now": [Function],
        },
        "uiMode": "editTemplate",
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory=""
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type=""
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 11,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": "editTemplate",
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 6,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        help={
                                                  <FormattedMessage
                                                            defaultMessage="A macro is required."
                                                            id="pic.components.Patient.field.macro.required"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        id="macro"
                                        label={
                                                  <FormattedMessage
                                                            defaultMessage="Macro"
                                                            id="pic.components.Patient.field.macro"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        onChange={[Function]}
                                        style={
                                                  Object {
                                                            "border": "1px solid #ff0000",
                                                          }
                                        }
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 12,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        help={
                                                  <FormattedMessage
                                                            defaultMessage="A macro is required."
                                                            id="pic.components.Patient.field.macro.required"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        id="macro"
                                        label={
                                                  <FormattedMessage
                                                            defaultMessage="Macro"
                                                            id="pic.components.Patient.field.macro"
                                                            tagName="span"
                                                            values={Object {}} />
                                        }
                                        onChange={[Function]}
                                        style={
                                                  Object {
                                                            "border": "1px solid #ff0000",
                                                          }
                                        }
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory=""
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type=""
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;

exports[`QuickView renders the unpopulated quick view tab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FormGroup
                bsClass="form-group"
                style={
                    Object {
                        "marginLeft": "1rem",
                      }
                }>
                <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                    style={
                        Object {
                            "marginRight": "1rem",
                          }
                    }>
                    Record Type
                </ControlLabel>
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="case">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="folder-close"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Case"
                        id="pic.components.Case.type.case"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="inquiry">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="question-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Inquiry"
                        id="pic.components.Case.type.inqury"
                        tagName="span"
                        values={Object {}} />
                </Radio>
                 
                <Radio
                    aria-checked={false}
                    bsClass="radio"
                    checked={false}
                    disabled={false}
                    inline={true}
                    name="caseType"
                    onChange={[Function]}
                    tabIndex={-1}
                    title=""
                    value="hoax">
                    <Glyphicon
                        bsClass="glyphicon"
                        glyph="warning-sign"
                        style={
                            Object {
                                "marginRight": "0.5rem",
                              }
                        } />
                     
                    <FormattedMessage
                        defaultMessage="Hoax"
                        id="pic.components.Case.type.hoax"
                        tagName="span"
                        values={Object {}} />
                </Radio>
            </FormGroup>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <FieldGroup
                disabled={true}
                groupStyle={
                    Object {
                        "marginLeft": "1rem",
                        "marginRight": "1rem",
                      }
                }
                id="topic"
                label="Topic"
                onChange={[Function]}
                type="text"
                value="" />
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    Caller
                </legend>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorName"
                            label="Caller Name"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorMediumDetail"
                            label="Phone"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}>
                        <FormGroup
                            bsClass="form-group">
                            <ControlLabel
                                bsClass="control-label"
                                srOnly={false}>
                                Direction
                            </ControlLabel>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="incoming">
                                Incoming
                            </Radio>
                            <br />
                            <Radio
                                bsClass="radio"
                                checked={false}
                                disabled={false}
                                inline={true}
                                name="interlocutorDirection"
                                onChange={[Function]}
                                title=""
                                value="outgoing">
                                Outgoing
                            </Radio>
                        </FormGroup>
                    </Col>
                </Row>
                <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <ControlLabel
                            bsClass="control-label"
                            srOnly={false}>
                            Organisation Name/Locality
                        </ControlLabel>
                        <Styled(undefined)
                            country={null}
                            disabled={true}
                            id="interlocutorOrganisation"
                            initialValue=""
                            inputClassName="form-control"
                            onSuggestSelect={[Function]}
                            suggestItemActiveClassName="active"
                            suggestItemClassName="list-group-item"
                            suggestsClassName="list-group" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldGroup
                            disabled={true}
                            id="interlocutorPostcode"
                            label="Postcode"
                            onChange={[Function]}
                            type="text"
                            value="" />
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <FieldSelectGroup
                            disabled={true}
                            id="category"
                            label="Caller Category"
                            onChange={[Function]}
                            options={
                                Array [
                                    Object {
                                      "label": "Victim/Patient",
                                    },
                                    Object {
                                      "group": "Family member",
                                      "options": Array [
                                        Object {
                                          "label": "Family Member parent",
                                        },
                                        Object {
                                          "label": "Family Member grandparent",
                                        },
                                        Object {
                                          "label": "Family Member partner/spouse",
                                        },
                                        Object {
                                          "label": "Family Member other",
                                        },
                                        Object {
                                          "label": "Friend",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Health personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Medical Professional doctor",
                                        },
                                        Object {
                                          "label": "Medical Professional nurse",
                                        },
                                        Object {
                                          "label": "Medical Professional pharmacist",
                                        },
                                        Object {
                                          "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                        },
                                        Object {
                                          "label": "Ambulance officer",
                                        },
                                        Object {
                                          "label": "Veterinary Personnel",
                                        },
                                        Object {
                                          "label": "Carer",
                                        },
                                      ],
                                    },
                                    Object {
                                      "group": "Other personnel",
                                      "options": Array [
                                        Object {
                                          "label": "Teacher or Educational worker",
                                        },
                                        Object {
                                          "label": "Police",
                                        },
                                        Object {
                                          "label": "Counsellor, eg Lifeline",
                                        },
                                      ],
                                    },
                                    Object {
                                      "label": "Other - see notes",
                                    },
                                    Object {
                                      "label": "Unknown",
                                    },
                                  ]
                            }
                            value="" />
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
    <Row
        bsClass="row"
        componentClass="div">
        <Col
            bsClass="col"
            componentClass="div"
            xs={12}>
            <styled.fieldset>
                <legend>
                    <FormattedMessage
                        defaultMessage="Caller Substances"
                        id="pic.components.Agent.section.callerAgents"
                        tagName="span"
                        values={Object {}} />
                </legend>
                <Row
                    bsClass="row"
                    className="equal"
                    componentClass="div">
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={6}>
                        <Row
                            bsClass="row"
                            componentClass="div">
                            <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}>
                                <FieldGroup
                                    disabled={true}
                                    id="agentName"
                                    label="Caller Substance Name"
                                    onChange={[Function]}
                                    type="text"
                                    value="" />
                            </Col>
                        </Row>
                    </Col>
                    <Col
                        bsClass="col"
                        className="vbottom"
                        componentClass="div"
                        xs={2}>
                        <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="primary"
                            disabled={false}
                            onClick={[Function]}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            Add 
                            <Glyphicon
                                bsClass="glyphicon"
                                glyph="chevron-right" />
                        </Button>
                    </Col>
                    <Col
                        bsClass="col"
                        componentClass="div"
                        xs={4}>
                        <Styled(undefined)
                            bordered={true}
                            condensed={true}
                            striped={true}
                            style={
                                Object {
                                    "marginTop": "2.6rem",
                                  }
                            }>
                            <tbody>
                                <tr>
                                    <td>
                                        <FormattedMessage
                                            defaultMessage="No Substances"
                                            id="pic.components.Agent.message.none"
                                            tagName="span"
                                            values={Object {}} />
                                    </td>
                                </tr>
                            </tbody>
                        </Styled(undefined)>
                    </Col>
                </Row>
            </styled.fieldset>
        </Col>
    </Row>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={true}>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FormGroup
                        bsClass="form-group"
                        style={
                              Object {
                                    "marginLeft": "1rem",
                                  }
                        }>
                        <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                    Object {
                                          "marginRight": "1rem",
                                        }
                              }>
                              Record Type
                        </ControlLabel>
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="case">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="folder-close"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Case"
                                    id="pic.components.Case.type.case"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="inquiry">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="question-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Inquiry"
                                    id="pic.components.Case.type.inqury"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                         
                        <Radio
                              aria-checked={false}
                              bsClass="radio"
                              checked={false}
                              disabled={false}
                              inline={true}
                              name="caseType"
                              onChange={[Function]}
                              tabIndex={-1}
                              title=""
                              value="hoax">
                              <Glyphicon
                                    bsClass="glyphicon"
                                    glyph="warning-sign"
                                    style={
                                          Object {
                                                "marginRight": "0.5rem",
                                              }
                                    } />
                               
                              <FormattedMessage
                                    defaultMessage="Hoax"
                                    id="pic.components.Case.type.hoax"
                                    tagName="span"
                                    values={Object {}} />
                        </Radio>
                  </FormGroup>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <FieldGroup
                        disabled={true}
                        groupStyle={
                              Object {
                                    "marginLeft": "1rem",
                                    "marginRight": "1rem",
                                  }
                        }
                        id="topic"
                        label="Topic"
                        onChange={[Function]}
                        type="text"
                        value="" />
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              Caller
                        </legend>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorName"
                                          label="Caller Name"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorMediumDetail"
                                          label="Phone"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}>
                                    <FormGroup
                                          bsClass="form-group">
                                          <ControlLabel
                                                bsClass="control-label"
                                                srOnly={false}>
                                                Direction
                                          </ControlLabel>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="incoming">
                                                Incoming
                                          </Radio>
                                          <br />
                                          <Radio
                                                bsClass="radio"
                                                checked={false}
                                                disabled={false}
                                                inline={true}
                                                name="interlocutorDirection"
                                                onChange={[Function]}
                                                title=""
                                                value="outgoing">
                                                Outgoing
                                          </Radio>
                                    </FormGroup>
                              </Col>
                        </Row>
                        <Row
                              bsClass="row"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <ControlLabel
                                          bsClass="control-label"
                                          srOnly={false}>
                                          Organisation Name/Locality
                                    </ControlLabel>
                                    <Styled(undefined)
                                          country={null}
                                          disabled={true}
                                          id="interlocutorOrganisation"
                                          initialValue=""
                                          inputClassName="form-control"
                                          onSuggestSelect={[Function]}
                                          suggestItemActiveClassName="active"
                                          suggestItemClassName="list-group-item"
                                          suggestsClassName="list-group" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldGroup
                                          disabled={true}
                                          id="interlocutorPostcode"
                                          label="Postcode"
                                          onChange={[Function]}
                                          type="text"
                                          value="" />
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <FieldSelectGroup
                                          disabled={true}
                                          id="category"
                                          label="Caller Category"
                                          onChange={[Function]}
                                          options={
                                                Array [
                                                      Object {
                                                        "label": "Victim/Patient",
                                                      },
                                                      Object {
                                                        "group": "Family member",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Family Member parent",
                                                          },
                                                          Object {
                                                            "label": "Family Member grandparent",
                                                          },
                                                          Object {
                                                            "label": "Family Member partner/spouse",
                                                          },
                                                          Object {
                                                            "label": "Family Member other",
                                                          },
                                                          Object {
                                                            "label": "Friend",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Health personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Medical Professional doctor",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional nurse",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional pharmacist",
                                                          },
                                                          Object {
                                                            "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                          },
                                                          Object {
                                                            "label": "Ambulance officer",
                                                          },
                                                          Object {
                                                            "label": "Veterinary Personnel",
                                                          },
                                                          Object {
                                                            "label": "Carer",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "group": "Other personnel",
                                                        "options": Array [
                                                          Object {
                                                            "label": "Teacher or Educational worker",
                                                          },
                                                          Object {
                                                            "label": "Police",
                                                          },
                                                          Object {
                                                            "label": "Counsellor, eg Lifeline",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "label": "Other - see notes",
                                                      },
                                                      Object {
                                                        "label": "Unknown",
                                                      },
                                                    ]
                                          }
                                          value="" />
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
      <Row
            bsClass="row"
            componentClass="div">
            <Col
                  bsClass="col"
                  componentClass="div"
                  xs={12}>
                  <styled.fieldset>
                        <legend>
                              <FormattedMessage
                                    defaultMessage="Caller Substances"
                                    id="pic.components.Agent.section.callerAgents"
                                    tagName="span"
                                    values={Object {}} />
                        </legend>
                        <Row
                              bsClass="row"
                              className="equal"
                              componentClass="div">
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}>
                                    <Row
                                          bsClass="row"
                                          componentClass="div">
                                          <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}>
                                                <FieldGroup
                                                      disabled={true}
                                                      id="agentName"
                                                      label="Caller Substance Name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="" />
                                          </Col>
                                    </Row>
                              </Col>
                              <Col
                                    bsClass="col"
                                    className="vbottom"
                                    componentClass="div"
                                    xs={2}>
                                    <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          Add 
                                          <Glyphicon
                                                bsClass="glyphicon"
                                                glyph="chevron-right" />
                                    </Button>
                              </Col>
                              <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}>
                                    <Styled(undefined)
                                          bordered={true}
                                          condensed={true}
                                          striped={true}
                                          style={
                                                Object {
                                                      "marginTop": "2.6rem",
                                                    }
                                          }>
                                          <tbody>
                                                <tr>
                                                      <td>
                                                            <FormattedMessage
                                                                  defaultMessage="No Substances"
                                                                  id="pic.components.Agent.message.none"
                                                                  tagName="span"
                                                                  values={Object {}} />
                                                      </td>
                                                </tr>
                                          </tbody>
                                    </Styled(undefined)>
                              </Col>
                        </Row>
                  </styled.fieldset>
            </Col>
      </Row>
</Grid>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "boilerplate.containers.NotFoundPage.header": "Page not found.",
          "pic.app.click": "Click here",
          "pic.app.mode.editTemplate": "Template Edit Mode",
          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
          "pic.app.version": "version {version}",
          "pic.components.Case.naturalId.none": "No ID",
          "pic.components.Case.section.agents.individual": "Substance {suffix}",
          "pic.components.Case.section.agents.overview": "Overview",
          "pic.components.Case.section.agents.title": "Substances",
          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
          "pic.components.Case.section.interlocutor.title": "Caller",
          "pic.components.Case.section.investigations.title": "Investigations",
          "pic.components.Case.section.notes": "Notes",
          "pic.components.Case.section.overview.title": "Current Status",
          "pic.components.Case.section.patient.title": "Patient",
          "pic.components.Case.section.quick.title": "Quick Entry",
          "pic.components.Case.section.treatment.title": "Treatment",
          "pic.components.Case.status.closed": "Closed",
          "pic.components.Case.status.deleted": "Deleted",
          "pic.components.Case.status.open": "Open",
          "pic.components.Case.status.reviewed": "Closed Pending Review",
          "pic.components.Case.topic.none": "No Topic",
          "pic.components.Case.type.case": "Case",
          "pic.components.Case.type.hoax": "Other",
          "pic.components.Case.type.inqury": "Inquiry",
          "pic.components.CaseList.adolescent": "Adolescent",
          "pic.components.CaseList.adult": "Adult",
          "pic.components.CaseList.animal": "Animal",
          "pic.components.CaseList.child": "Child",
          "pic.components.CaseList.comms": "Comms",
          "pic.components.CaseList.elderly": "Elderly",
          "pic.components.CaseList.human": "Human",
          "pic.components.CaseList.infant": "Infant",
          "pic.components.CaseList.item.label": "{category} - {name}",
          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
          "pic.components.CaseList.neonate": "Neonate",
          "pic.components.CaseList.notes": "Notes",
          "pic.components.CaseList.toddler": "Toddler",
          "pic.components.CaseList.topic.none": "<no topic>",
          "pic.components.ClinicalFeatures.button.close": "Close",
          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
          "pic.components.ClinicalFeatures.field.features": "Features",
          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
          "pic.components.ClinicalFeatures.label.content.none": "No Content",
          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
          "pic.components.ClinicalFeatures.message.none": "No Features",
          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
          "pic.components.DashboardPage.action.admin": "Admin",
          "pic.components.DashboardPage.action.analytics": "Analytics",
          "pic.components.DashboardPage.action.app": "App",
          "pic.components.DashboardPage.action.menu": "Menu",
          "pic.components.DashboardPage.action.signout": "Logout",
          "pic.components.Interlocutor.communication": "Communication",
          "pic.components.Interlocutor.communication.plural": "Communications",
          "pic.components.Interlocutor.communication.type": "Type",
          "pic.components.Interlocutor.field.category": "Caller Category",
          "pic.components.Interlocutor.field.contact": "Contact Detail",
          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
          "pic.components.Interlocutor.field.detail.email": "Caller Email",
          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
          "pic.components.Interlocutor.field.direction": "Direction",
          "pic.components.Interlocutor.field.medium.type": "Communication Type",
          "pic.components.Interlocutor.field.name": "Caller Name",
          "pic.components.Interlocutor.field.organisation.location": "Location",
          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
          "pic.components.Interlocutor.history.none": "Change history unavailable",
          "pic.components.Interlocutor.section.caller": "Caller",
          "pic.components.Interlocutor.section.organisation": "Organisation",
          "pic.components.Investigations.requests.content.none": "No request content",
          "pic.components.Investigations.requests.label.pending": "PENDING",
          "pic.components.Investigations.requests.label.result": "RESULT",
          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
          "pic.components.Investigations.result.add": "Add Result",
          "pic.components.Investigations.results.content.none": "No result content",
          "pic.components.Investigations.results.message.none": "No results",
          "pic.components.Overview.communication.interlocutor.name": "Caller:",
          "pic.components.Overview.communication.spi.name": "SPI:",
          "pic.components.Patient.field.age": "Age",
          "pic.components.Patient.field.ageGroup": "Age Group",
          "pic.components.Patient.field.ageYears": "Age in Years",
          "pic.components.Patient.field.animalType": "Animal Type",
          "pic.components.Patient.field.circumstance": "Circumstance",
          "pic.components.Patient.field.location": "Location Type",
          "pic.components.Patient.field.macro": "Macro",
          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
          "pic.components.Patient.field.macro.required": "A macro is required.",
          "pic.components.Patient.field.mrn": "Hospital MRN",
          "pic.components.Patient.field.name": "Patient Name",
          "pic.components.Patient.field.occupation": "Occupation",
          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
          "pic.components.Patient.field.postcode": "Postcode of Exposure",
          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
          "pic.components.Patient.field.riskassessment": "Risk Assessment",
          "pic.components.Patient.field.sex": "Biological Sex",
          "pic.components.Patient.field.topic": "Topic",
          "pic.components.Patient.field.weight": "Weight (kg)",
          "pic.components.Patient.section.exposure": "Exposure",
          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
          "pic.components.TemplateList.action.template.delete": "Delete Template",
          "pic.components.TemplateList.action.template.edit": "Edit Template",
          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
          "pic.components.TemplateList.templates.none": "No Templates",
          "pic.components.Treatment.button.referral.add": "Add Referral",
          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
          "pic.components.Treatment.field.disposition": "Disposition",
          "pic.components.Treatment.field.treatments": "Treatments",
          "pic.components.Treatment.label.referee": "Refer to Specialist",
          "pic.components.Treatment.label.referrals.none": "No Referrals",
          "pic.components.Treatment.label.specialty": "Specialty",
          "pic.components.Treatment.label.treatment.none": "No Treatments",
          "pic.components.Treatment.message.none": "No Treatments",
          "pic.components.Treatment.referrals": "Referrals",
          "pic.components.Treatment.treatment": "Treatment",
          "pic.components.Treatment.treatment.plural": "Treatments",
          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
        },
        "now": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "boilerplate.containers.NotFoundPage.header": "Page not found.",
            "pic.app.click": "Click here",
            "pic.app.mode.editTemplate": "Template Edit Mode",
            "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
            "pic.app.version": "version {version}",
            "pic.components.Case.naturalId.none": "No ID",
            "pic.components.Case.section.agents.individual": "Substance {suffix}",
            "pic.components.Case.section.agents.overview": "Overview",
            "pic.components.Case.section.agents.title": "Substances",
            "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
            "pic.components.Case.section.interlocutor.title": "Caller",
            "pic.components.Case.section.investigations.title": "Investigations",
            "pic.components.Case.section.notes": "Notes",
            "pic.components.Case.section.overview.title": "Current Status",
            "pic.components.Case.section.patient.title": "Patient",
            "pic.components.Case.section.quick.title": "Quick Entry",
            "pic.components.Case.section.treatment.title": "Treatment",
            "pic.components.Case.status.closed": "Closed",
            "pic.components.Case.status.deleted": "Deleted",
            "pic.components.Case.status.open": "Open",
            "pic.components.Case.status.reviewed": "Closed Pending Review",
            "pic.components.Case.topic.none": "No Topic",
            "pic.components.Case.type.case": "Case",
            "pic.components.Case.type.hoax": "Other",
            "pic.components.Case.type.inqury": "Inquiry",
            "pic.components.CaseList.adolescent": "Adolescent",
            "pic.components.CaseList.adult": "Adult",
            "pic.components.CaseList.animal": "Animal",
            "pic.components.CaseList.child": "Child",
            "pic.components.CaseList.comms": "Comms",
            "pic.components.CaseList.elderly": "Elderly",
            "pic.components.CaseList.human": "Human",
            "pic.components.CaseList.infant": "Infant",
            "pic.components.CaseList.item.label": "{category} - {name}",
            "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
            "pic.components.CaseList.neonate": "Neonate",
            "pic.components.CaseList.notes": "Notes",
            "pic.components.CaseList.toddler": "Toddler",
            "pic.components.CaseList.topic.none": "<no topic>",
            "pic.components.ClinicalFeatures.button.close": "Close",
            "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
            "pic.components.ClinicalFeatures.field.features": "Features",
            "pic.components.ClinicalFeatures.field.outcome": "Outcome",
            "pic.components.ClinicalFeatures.field.outcome.death": "Death",
            "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
            "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
            "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
            "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
            "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
            "pic.components.ClinicalFeatures.field.when.before": "Before Call",
            "pic.components.ClinicalFeatures.label.content.none": "No Content",
            "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
            "pic.components.ClinicalFeatures.message.none": "No Features",
            "pic.components.ClinicalFeendures.field.when.end": "End of Case",
            "pic.components.DashboardPage.action.admin": "Admin",
            "pic.components.DashboardPage.action.analytics": "Analytics",
            "pic.components.DashboardPage.action.app": "App",
            "pic.components.DashboardPage.action.menu": "Menu",
            "pic.components.DashboardPage.action.signout": "Logout",
            "pic.components.Interlocutor.communication": "Communication",
            "pic.components.Interlocutor.communication.plural": "Communications",
            "pic.components.Interlocutor.communication.type": "Type",
            "pic.components.Interlocutor.field.category": "Caller Category",
            "pic.components.Interlocutor.field.contact": "Contact Detail",
            "pic.components.Interlocutor.field.detail.default": "Caller Detail",
            "pic.components.Interlocutor.field.detail.email": "Caller Email",
            "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
            "pic.components.Interlocutor.field.direction": "Direction",
            "pic.components.Interlocutor.field.medium.type": "Communication Type",
            "pic.components.Interlocutor.field.name": "Caller Name",
            "pic.components.Interlocutor.field.organisation.location": "Location",
            "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
            "pic.components.Interlocutor.history.none": "Change history unavailable",
            "pic.components.Interlocutor.section.caller": "Caller",
            "pic.components.Interlocutor.section.organisation": "Organisation",
            "pic.components.Investigations.requests.content.none": "No request content",
            "pic.components.Investigations.requests.label.pending": "PENDING",
            "pic.components.Investigations.requests.label.result": "RESULT",
            "pic.components.Investigations.requests.message.none": "No Investigations Requested",
            "pic.components.Investigations.result.add": "Add Result",
            "pic.components.Investigations.results.content.none": "No result content",
            "pic.components.Investigations.results.message.none": "No results",
            "pic.components.Overview.communication.interlocutor.name": "Caller:",
            "pic.components.Overview.communication.spi.name": "SPI:",
            "pic.components.Patient.field.age": "Age",
            "pic.components.Patient.field.ageGroup": "Age Group",
            "pic.components.Patient.field.ageYears": "Age in Years",
            "pic.components.Patient.field.animalType": "Animal Type",
            "pic.components.Patient.field.circumstance": "Circumstance",
            "pic.components.Patient.field.location": "Location Type",
            "pic.components.Patient.field.macro": "Macro",
            "pic.components.Patient.field.macro.invalid": "This macro already exists.",
            "pic.components.Patient.field.macro.required": "A macro is required.",
            "pic.components.Patient.field.mrn": "Hospital MRN",
            "pic.components.Patient.field.name": "Patient Name",
            "pic.components.Patient.field.occupation": "Occupation",
            "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
            "pic.components.Patient.field.postcode": "Postcode of Exposure",
            "pic.components.Patient.field.pregnancy.lactating": "Lactating",
            "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
            "pic.components.Patient.field.pregnancy.trimester": "Trimester",
            "pic.components.Patient.field.riskassessment": "Risk Assessment",
            "pic.components.Patient.field.sex": "Biological Sex",
            "pic.components.Patient.field.topic": "Topic",
            "pic.components.Patient.field.weight": "Weight (kg)",
            "pic.components.Patient.section.exposure": "Exposure",
            "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
            "pic.components.TemplateList.action.template.delete": "Delete Template",
            "pic.components.TemplateList.action.template.edit": "Edit Template",
            "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
            "pic.components.TemplateList.templates.none": "No Templates",
            "pic.components.Treatment.button.referral.add": "Add Referral",
            "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
            "pic.components.Treatment.field.disposition": "Disposition",
            "pic.components.Treatment.field.treatments": "Treatments",
            "pic.components.Treatment.label.referee": "Refer to Specialist",
            "pic.components.Treatment.label.referrals.none": "No Referrals",
            "pic.components.Treatment.label.specialty": "Specialty",
            "pic.components.Treatment.label.treatment.none": "No Treatments",
            "pic.components.Treatment.message.none": "No Treatments",
            "pic.components.Treatment.referrals": "Referrals",
            "pic.components.Treatment.treatment": "Treatment",
            "pic.components.Treatment.treatment.plural": "Treatments",
            "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
          },
          "now": [Function],
        },
      },
      "_currentElement": <QuickView
        addAgent={[Function]}
        agentDuration=""
        agentDurationUnits=""
        agentDurationUnknown={false}
        agentName=""
        agentQuantity=""
        agentQuantityUnits=""
        agentQuantityUnknown={false}
        agentRouteOfExposure={Array []}
        agentTimeOfExposure=""
        agentTypeOfExposure=""
        agents={Array []}
        currentCase={Object {}}
        executeMacro={[Function]}
        features={Array []}
        featuresDescriptorList={Array []}
        interlocutorCategory=""
        interlocutorCity=""
        interlocutorDirection=""
        interlocutorGeometry={Object {}}
        interlocutorMediumDetail=""
        interlocutorName=""
        interlocutorOrganisation=""
        interlocutorPostcode=""
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "boilerplate.containers.NotFoundPage.header": "Page not found.",
                          "pic.app.click": "Click here",
                          "pic.app.mode.editTemplate": "Template Edit Mode",
                          "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
                          "pic.app.version": "version {version}",
                          "pic.components.Case.naturalId.none": "No ID",
                          "pic.components.Case.section.agents.individual": "Substance {suffix}",
                          "pic.components.Case.section.agents.overview": "Overview",
                          "pic.components.Case.section.agents.title": "Substances",
                          "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
                          "pic.components.Case.section.interlocutor.title": "Caller",
                          "pic.components.Case.section.investigations.title": "Investigations",
                          "pic.components.Case.section.notes": "Notes",
                          "pic.components.Case.section.overview.title": "Current Status",
                          "pic.components.Case.section.patient.title": "Patient",
                          "pic.components.Case.section.quick.title": "Quick Entry",
                          "pic.components.Case.section.treatment.title": "Treatment",
                          "pic.components.Case.status.closed": "Closed",
                          "pic.components.Case.status.deleted": "Deleted",
                          "pic.components.Case.status.open": "Open",
                          "pic.components.Case.status.reviewed": "Closed Pending Review",
                          "pic.components.Case.topic.none": "No Topic",
                          "pic.components.Case.type.case": "Case",
                          "pic.components.Case.type.hoax": "Other",
                          "pic.components.Case.type.inqury": "Inquiry",
                          "pic.components.CaseList.adolescent": "Adolescent",
                          "pic.components.CaseList.adult": "Adult",
                          "pic.components.CaseList.animal": "Animal",
                          "pic.components.CaseList.child": "Child",
                          "pic.components.CaseList.comms": "Comms",
                          "pic.components.CaseList.elderly": "Elderly",
                          "pic.components.CaseList.human": "Human",
                          "pic.components.CaseList.infant": "Infant",
                          "pic.components.CaseList.item.label": "{category} - {name}",
                          "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
                          "pic.components.CaseList.neonate": "Neonate",
                          "pic.components.CaseList.notes": "Notes",
                          "pic.components.CaseList.toddler": "Toddler",
                          "pic.components.CaseList.topic.none": "<no topic>",
                          "pic.components.ClinicalFeatures.button.close": "Close",
                          "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
                          "pic.components.ClinicalFeatures.field.features": "Features",
                          "pic.components.ClinicalFeatures.field.outcome": "Outcome",
                          "pic.components.ClinicalFeatures.field.outcome.death": "Death",
                          "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
                          "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
                          "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
                          "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
                          "pic.components.ClinicalFeatures.field.when.before": "Before Call",
                          "pic.components.ClinicalFeatures.label.content.none": "No Content",
                          "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
                          "pic.components.ClinicalFeatures.message.none": "No Features",
                          "pic.components.ClinicalFeendures.field.when.end": "End of Case",
                          "pic.components.DashboardPage.action.admin": "Admin",
                          "pic.components.DashboardPage.action.analytics": "Analytics",
                          "pic.components.DashboardPage.action.app": "App",
                          "pic.components.DashboardPage.action.menu": "Menu",
                          "pic.components.DashboardPage.action.signout": "Logout",
                          "pic.components.Interlocutor.communication": "Communication",
                          "pic.components.Interlocutor.communication.plural": "Communications",
                          "pic.components.Interlocutor.communication.type": "Type",
                          "pic.components.Interlocutor.field.category": "Caller Category",
                          "pic.components.Interlocutor.field.contact": "Contact Detail",
                          "pic.components.Interlocutor.field.detail.default": "Caller Detail",
                          "pic.components.Interlocutor.field.detail.email": "Caller Email",
                          "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
                          "pic.components.Interlocutor.field.direction": "Direction",
                          "pic.components.Interlocutor.field.medium.type": "Communication Type",
                          "pic.components.Interlocutor.field.name": "Caller Name",
                          "pic.components.Interlocutor.field.organisation.location": "Location",
                          "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
                          "pic.components.Interlocutor.history.none": "Change history unavailable",
                          "pic.components.Interlocutor.section.caller": "Caller",
                          "pic.components.Interlocutor.section.organisation": "Organisation",
                          "pic.components.Investigations.requests.content.none": "No request content",
                          "pic.components.Investigations.requests.label.pending": "PENDING",
                          "pic.components.Investigations.requests.label.result": "RESULT",
                          "pic.components.Investigations.requests.message.none": "No Investigations Requested",
                          "pic.components.Investigations.result.add": "Add Result",
                          "pic.components.Investigations.results.content.none": "No result content",
                          "pic.components.Investigations.results.message.none": "No results",
                          "pic.components.Overview.communication.interlocutor.name": "Caller:",
                          "pic.components.Overview.communication.spi.name": "SPI:",
                          "pic.components.Patient.field.age": "Age",
                          "pic.components.Patient.field.ageGroup": "Age Group",
                          "pic.components.Patient.field.ageYears": "Age in Years",
                          "pic.components.Patient.field.animalType": "Animal Type",
                          "pic.components.Patient.field.circumstance": "Circumstance",
                          "pic.components.Patient.field.location": "Location Type",
                          "pic.components.Patient.field.macro": "Macro",
                          "pic.components.Patient.field.macro.invalid": "This macro already exists.",
                          "pic.components.Patient.field.macro.required": "A macro is required.",
                          "pic.components.Patient.field.mrn": "Hospital MRN",
                          "pic.components.Patient.field.name": "Patient Name",
                          "pic.components.Patient.field.occupation": "Occupation",
                          "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
                          "pic.components.Patient.field.postcode": "Postcode of Exposure",
                          "pic.components.Patient.field.pregnancy.lactating": "Lactating",
                          "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
                          "pic.components.Patient.field.pregnancy.trimester": "Trimester",
                          "pic.components.Patient.field.riskassessment": "Risk Assessment",
                          "pic.components.Patient.field.sex": "Biological Sex",
                          "pic.components.Patient.field.topic": "Topic",
                          "pic.components.Patient.field.weight": "Weight (kg)",
                          "pic.components.Patient.section.exposure": "Exposure",
                          "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
                          "pic.components.TemplateList.action.template.delete": "Delete Template",
                          "pic.components.TemplateList.action.template.edit": "Edit Template",
                          "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
                          "pic.components.TemplateList.templates.none": "No Templates",
                          "pic.components.Treatment.button.referral.add": "Add Referral",
                          "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
                          "pic.components.Treatment.field.disposition": "Disposition",
                          "pic.components.Treatment.field.treatments": "Treatments",
                          "pic.components.Treatment.label.referee": "Refer to Specialist",
                          "pic.components.Treatment.label.referrals.none": "No Referrals",
                          "pic.components.Treatment.label.specialty": "Specialty",
                          "pic.components.Treatment.label.treatment.none": "No Treatments",
                          "pic.components.Treatment.message.none": "No Treatments",
                          "pic.components.Treatment.referrals": "Referrals",
                          "pic.components.Treatment.treatment": "Treatment",
                          "pic.components.Treatment.treatment.plural": "Treatments",
                          "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
                        },
                        "now": [Function],
                      }
        }
        isValidMacro={false}
        lookupMacroTemplate={[Function]}
        macro=""
        markAsCase={[Function]}
        markAsHoax={[Function]}
        markAsInquiry={[Function]}
        orgCountry=""
        patientAge=""
        patientAgeGroup=""
        patientAgeUnits=""
        patientAnimalType=""
        patientCategory=""
        patientCircumstance=""
        patientGeometry={Object {}}
        patientLocation=""
        patientName=""
        patientPoisonSeverityScore=""
        patientPostcode=""
        patientRiskAssessment=""
        patientSex=""
        patientSuburb=""
        patientWeight=""
        patientWeightUnits=""
        template={Object {}}
        topic=""
        type=""
        updateAgentDuration={[Function]}
        updateAgentDurationUnits={[Function]}
        updateAgentDurationUnknown={[Function]}
        updateAgentName={[Function]}
        updateAgentQuantity={[Function]}
        updateAgentQuantityUnits={[Function]}
        updateAgentQuantityUnknown={[Function]}
        updateAgentRouteOfExposure={[Function]}
        updateAgentTimeOfExposure={[Function]}
        updateAgentTypeOfExposure={[Function]}
        updateCaseTopic={[Function]}
        updateClinicalFeaturesDescriptorList={[Function]}
        updateInterlocutorAddress1={[Function]}
        updateInterlocutorCategory={[Function]}
        updateInterlocutorCity={[Function]}
        updateInterlocutorDirection={[Function]}
        updateInterlocutorMediumDetail={[Function]}
        updateInterlocutorName={[Function]}
        updateInterlocutorOrganisation={[Function]}
        updateInterlocutorPostcode={[Function]}
        updateInterlocutorState={[Function]}
        updateInterlocutorTelephone={[Function]}
        updatePatientAge={[Function]}
        updatePatientAnimalType={[Function]}
        updatePatientCategory={[Function]}
        updatePatientCircumstance={[Function]}
        updatePatientGeometry={[Function]}
        updatePatientLocality={[Function]}
        updatePatientLocation={[Function]}
        updatePatientName={[Function]}
        updatePatientPoisonSeverityScore={[Function]}
        updatePatientPostcode={[Function]}
        updatePatientRiskAssessment={[Function]}
        updatePatientSex={[Function]}
        updatePatientSuburb={[Function]}
        updatePatientWeight={[Function]}
        updateTemplateMacro={[Function]}
        userSPIFull={Object {}} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": QuickView {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "uiMode": undefined,
        },
        "props": Object {
          "addAgent": [Function],
          "agentDuration": "",
          "agentDurationUnits": "",
          "agentDurationUnknown": false,
          "agentName": "",
          "agentQuantity": "",
          "agentQuantityUnits": "",
          "agentQuantityUnknown": false,
          "agentRouteOfExposure": Array [],
          "agentTimeOfExposure": "",
          "agentTypeOfExposure": "",
          "agents": Array [],
          "currentCase": Object {},
          "executeMacro": [Function],
          "features": Array [],
          "featuresDescriptorList": Array [],
          "interlocutorCategory": "",
          "interlocutorCity": "",
          "interlocutorDirection": "",
          "interlocutorGeometry": Object {},
          "interlocutorMediumDetail": "",
          "interlocutorName": "",
          "interlocutorOrganisation": "",
          "interlocutorPostcode": "",
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          },
          "isValidMacro": false,
          "lookupMacroTemplate": [Function],
          "macro": "",
          "markAsCase": [Function],
          "markAsHoax": [Function],
          "markAsInquiry": [Function],
          "orgCountry": "",
          "patientAge": "",
          "patientAgeGroup": "",
          "patientAgeUnits": "",
          "patientAnimalType": "",
          "patientCategory": "",
          "patientCircumstance": "",
          "patientGeometry": Object {},
          "patientLocation": "",
          "patientName": "",
          "patientPoisonSeverityScore": "",
          "patientPostcode": "",
          "patientRiskAssessment": "",
          "patientSex": "",
          "patientSuburb": "",
          "patientWeight": "",
          "patientWeightUnits": "",
          "template": Object {},
          "topic": "",
          "type": "",
          "updateAgentDuration": [Function],
          "updateAgentDurationUnits": [Function],
          "updateAgentDurationUnknown": [Function],
          "updateAgentName": [Function],
          "updateAgentQuantity": [Function],
          "updateAgentQuantityUnits": [Function],
          "updateAgentQuantityUnknown": [Function],
          "updateAgentRouteOfExposure": [Function],
          "updateAgentTimeOfExposure": [Function],
          "updateAgentTypeOfExposure": [Function],
          "updateCaseTopic": [Function],
          "updateClinicalFeaturesDescriptorList": [Function],
          "updateInterlocutorAddress1": [Function],
          "updateInterlocutorCategory": [Function],
          "updateInterlocutorCity": [Function],
          "updateInterlocutorDirection": [Function],
          "updateInterlocutorMediumDetail": [Function],
          "updateInterlocutorName": [Function],
          "updateInterlocutorOrganisation": [Function],
          "updateInterlocutorPostcode": [Function],
          "updateInterlocutorState": [Function],
          "updateInterlocutorTelephone": [Function],
          "updatePatientAge": [Function],
          "updatePatientAnimalType": [Function],
          "updatePatientCategory": [Function],
          "updatePatientCircumstance": [Function],
          "updatePatientGeometry": [Function],
          "updatePatientLocality": [Function],
          "updatePatientLocation": [Function],
          "updatePatientName": [Function],
          "updatePatientPoisonSeverityScore": [Function],
          "updatePatientPostcode": [Function],
          "updatePatientRiskAssessment": [Function],
          "updatePatientSex": [Function],
          "updatePatientSuburb": [Function],
          "updatePatientWeight": [Function],
          "updateTemplateMacro": [Function],
          "userSPIFull": Object {},
        },
        "refs": Object {},
        "state": null,
        "updatePatientLocalityFromCaller": [Function],
        "updatePatientLocalityFromLookup": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
        "_debugID": 2,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={true}>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FormGroup
                                        bsClass="form-group"
                                        style={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                          }
                                        }>
                                        <ControlLabel
                                                  bsClass="control-label"
                                                  srOnly={false}
                                                  style={
                                                            Object {
                                                                      "marginRight": "1rem",
                                                                    }
                                                  }>
                                                  Record Type
                                        </ControlLabel>
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="case">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="folder-close"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Case"
                                                            id="pic.components.Case.type.case"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="inquiry">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="question-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Inquiry"
                                                            id="pic.components.Case.type.inqury"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                                         
                                        <Radio
                                                  aria-checked={false}
                                                  bsClass="radio"
                                                  checked={false}
                                                  disabled={false}
                                                  inline={true}
                                                  name="caseType"
                                                  onChange={[Function]}
                                                  tabIndex={-1}
                                                  title=""
                                                  value="hoax">
                                                  <Glyphicon
                                                            bsClass="glyphicon"
                                                            glyph="warning-sign"
                                                            style={
                                                                      Object {
                                                                                "marginRight": "0.5rem",
                                                                              }
                                                            } />
                                                   
                                                  <FormattedMessage
                                                            defaultMessage="Hoax"
                                                            id="pic.components.Case.type.hoax"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </Radio>
                              </FormGroup>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <FieldGroup
                                        disabled={true}
                                        groupStyle={
                                                  Object {
                                                            "marginLeft": "1rem",
                                                            "marginRight": "1rem",
                                                          }
                                        }
                                        id="topic"
                                        label="Topic"
                                        onChange={[Function]}
                                        type="text"
                                        value="" />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  Caller
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorName"
                                                                      label="Caller Name"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorMediumDetail"
                                                                      label="Phone"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <FormGroup
                                                                      bsClass="form-group">
                                                                      <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}>
                                                                                Direction
                                                                      </ControlLabel>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="incoming">
                                                                                Incoming
                                                                      </Radio>
                                                                      <br />
                                                                      <Radio
                                                                                bsClass="radio"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={true}
                                                                                name="interlocutorDirection"
                                                                                onChange={[Function]}
                                                                                title=""
                                                                                value="outgoing">
                                                                                Outgoing
                                                                      </Radio>
                                                            </FormGroup>
                                                  </Col>
                                        </Row>
                                        <Row
                                                  bsClass="row"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <ControlLabel
                                                                      bsClass="control-label"
                                                                      srOnly={false}>
                                                                      Organisation Name/Locality
                                                            </ControlLabel>
                                                            <Styled(undefined)
                                                                      country={null}
                                                                      disabled={true}
                                                                      id="interlocutorOrganisation"
                                                                      initialValue=""
                                                                      inputClassName="form-control"
                                                                      onSuggestSelect={[Function]}
                                                                      suggestItemActiveClassName="active"
                                                                      suggestItemClassName="list-group-item"
                                                                      suggestsClassName="list-group" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldGroup
                                                                      disabled={true}
                                                                      id="interlocutorPostcode"
                                                                      label="Postcode"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="" />
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <FieldSelectGroup
                                                                      disabled={true}
                                                                      id="category"
                                                                      label="Caller Category"
                                                                      onChange={[Function]}
                                                                      options={
                                                                                Array [
                                                                                          Object {
                                                                                            "label": "Victim/Patient",
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Family member",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Family Member parent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member grandparent",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member partner/spouse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Family Member other",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Friend",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Health personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Medical Professional doctor",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional nurse",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional pharmacist",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Medical Professional other, eg dentist, psychologist, social worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Ambulance officer",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Veterinary Personnel",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Carer",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "group": "Other personnel",
                                                                                            "options": Array [
                                                                                              Object {
                                                                                                "label": "Teacher or Educational worker",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Police",
                                                                                              },
                                                                                              Object {
                                                                                                "label": "Counsellor, eg Lifeline",
                                                                                              },
                                                                                            ],
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Other - see notes",
                                                                                          },
                                                                                          Object {
                                                                                            "label": "Unknown",
                                                                                          },
                                                                                        ]
                                                                      }
                                                                      value="" />
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    componentClass="div">
                    <Col
                              bsClass="col"
                              componentClass="div"
                              xs={12}>
                              <styled.fieldset>
                                        <legend>
                                                  <FormattedMessage
                                                            defaultMessage="Caller Substances"
                                                            id="pic.components.Agent.section.callerAgents"
                                                            tagName="span"
                                                            values={Object {}} />
                                        </legend>
                                        <Row
                                                  bsClass="row"
                                                  className="equal"
                                                  componentClass="div">
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}>
                                                            <Row
                                                                      bsClass="row"
                                                                      componentClass="div">
                                                                      <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}>
                                                                                <FieldGroup
                                                                                          disabled={true}
                                                                                          id="agentName"
                                                                                          label="Caller Substance Name"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value="" />
                                                                      </Col>
                                                            </Row>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            className="vbottom"
                                                            componentClass="div"
                                                            xs={2}>
                                                            <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="primary"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      Add 
                                                                      <Glyphicon
                                                                                bsClass="glyphicon"
                                                                                glyph="chevron-right" />
                                                            </Button>
                                                  </Col>
                                                  <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={4}>
                                                            <Styled(undefined)
                                                                      bordered={true}
                                                                      condensed={true}
                                                                      striped={true}
                                                                      style={
                                                                                Object {
                                                                                          "marginTop": "2.6rem",
                                                                                        }
                                                                      }>
                                                                      <tbody>
                                                                                <tr>
                                                                                          <td>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="No Substances"
                                                                                                              id="pic.components.Agent.message.none"
                                                                                                              tagName="span"
                                                                                                              values={Object {}} />
                                                                                          </td>
                                                                                </tr>
                                                                      </tbody>
                                                            </Styled(undefined)>
                                                  </Col>
                                        </Row>
                              </styled.fieldset>
                    </Col>
          </Row>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <QuickView
    addAgent={[Function]}
    agentDuration=""
    agentDurationUnits=""
    agentDurationUnknown={false}
    agentName=""
    agentQuantity=""
    agentQuantityUnits=""
    agentQuantityUnknown={false}
    agentRouteOfExposure={Array []}
    agentTimeOfExposure=""
    agentTypeOfExposure=""
    agents={Array []}
    currentCase={Object {}}
    executeMacro={[Function]}
    features={Array []}
    featuresDescriptorList={Array []}
    interlocutorCategory=""
    interlocutorCity=""
    interlocutorDirection=""
    interlocutorGeometry={Object {}}
    interlocutorMediumDetail=""
    interlocutorName=""
    interlocutorOrganisation=""
    interlocutorPostcode=""
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "boilerplate.containers.NotFoundPage.header": "Page not found.",
              "pic.app.click": "Click here",
              "pic.app.mode.editTemplate": "Template Edit Mode",
              "pic.app.updated": "Application has updated. {link} to reload when you are ready.",
              "pic.app.version": "version {version}",
              "pic.components.Case.naturalId.none": "No ID",
              "pic.components.Case.section.agents.individual": "Substance {suffix}",
              "pic.components.Case.section.agents.overview": "Overview",
              "pic.components.Case.section.agents.title": "Substances",
              "pic.components.Case.section.clinicalfeatures.title": "Clinical Features",
              "pic.components.Case.section.interlocutor.title": "Caller",
              "pic.components.Case.section.investigations.title": "Investigations",
              "pic.components.Case.section.notes": "Notes",
              "pic.components.Case.section.overview.title": "Current Status",
              "pic.components.Case.section.patient.title": "Patient",
              "pic.components.Case.section.quick.title": "Quick Entry",
              "pic.components.Case.section.treatment.title": "Treatment",
              "pic.components.Case.status.closed": "Closed",
              "pic.components.Case.status.deleted": "Deleted",
              "pic.components.Case.status.open": "Open",
              "pic.components.Case.status.reviewed": "Closed Pending Review",
              "pic.components.Case.topic.none": "No Topic",
              "pic.components.Case.type.case": "Case",
              "pic.components.Case.type.hoax": "Other",
              "pic.components.Case.type.inqury": "Inquiry",
              "pic.components.CaseList.adolescent": "Adolescent",
              "pic.components.CaseList.adult": "Adult",
              "pic.components.CaseList.animal": "Animal",
              "pic.components.CaseList.child": "Child",
              "pic.components.CaseList.comms": "Comms",
              "pic.components.CaseList.elderly": "Elderly",
              "pic.components.CaseList.human": "Human",
              "pic.components.CaseList.infant": "Infant",
              "pic.components.CaseList.item.label": "{category} - {name}",
              "pic.components.CaseList.messages.context.unavailable": "no actions available during call",
              "pic.components.CaseList.neonate": "Neonate",
              "pic.components.CaseList.notes": "Notes",
              "pic.components.CaseList.toddler": "Toddler",
              "pic.components.CaseList.topic.none": "<no topic>",
              "pic.components.ClinicalFeatures.button.close": "Close",
              "pic.components.ClinicalFeatures.button.notes.add": "Add Notes",
              "pic.components.ClinicalFeatures.field.features": "Features",
              "pic.components.ClinicalFeatures.field.outcome": "Outcome",
              "pic.components.ClinicalFeatures.field.outcome.death": "Death",
              "pic.components.ClinicalFeatures.field.outcome.delayed-recovery": "Delayed Recovery",
              "pic.components.ClinicalFeatures.field.outcome.no-impact": "No Impact",
              "pic.components.ClinicalFeatures.field.outcome.recovery": "Recovery",
              "pic.components.ClinicalFeatures.field.outcome.sequelae": "Sequelae",
              "pic.components.ClinicalFeatures.field.when.at": "At Time of Call",
              "pic.components.ClinicalFeatures.field.when.before": "Before Call",
              "pic.components.ClinicalFeatures.label.content.none": "No Content",
              "pic.components.ClinicalFeatures.label.notes.none": "No Notes",
              "pic.components.ClinicalFeatures.message.none": "No Features",
              "pic.components.ClinicalFeendures.field.when.end": "End of Case",
              "pic.components.DashboardPage.action.admin": "Admin",
              "pic.components.DashboardPage.action.analytics": "Analytics",
              "pic.components.DashboardPage.action.app": "App",
              "pic.components.DashboardPage.action.menu": "Menu",
              "pic.components.DashboardPage.action.signout": "Logout",
              "pic.components.Interlocutor.communication": "Communication",
              "pic.components.Interlocutor.communication.plural": "Communications",
              "pic.components.Interlocutor.communication.type": "Type",
              "pic.components.Interlocutor.field.category": "Caller Category",
              "pic.components.Interlocutor.field.contact": "Contact Detail",
              "pic.components.Interlocutor.field.detail.default": "Caller Detail",
              "pic.components.Interlocutor.field.detail.email": "Caller Email",
              "pic.components.Interlocutor.field.detail.phone": "Caller Phone",
              "pic.components.Interlocutor.field.direction": "Direction",
              "pic.components.Interlocutor.field.medium.type": "Communication Type",
              "pic.components.Interlocutor.field.name": "Caller Name",
              "pic.components.Interlocutor.field.organisation.location": "Location",
              "pic.components.Interlocutor.field.organisation.telephone": "Telephone",
              "pic.components.Interlocutor.history.none": "Change history unavailable",
              "pic.components.Interlocutor.section.caller": "Caller",
              "pic.components.Interlocutor.section.organisation": "Organisation",
              "pic.components.Investigations.requests.content.none": "No request content",
              "pic.components.Investigations.requests.label.pending": "PENDING",
              "pic.components.Investigations.requests.label.result": "RESULT",
              "pic.components.Investigations.requests.message.none": "No Investigations Requested",
              "pic.components.Investigations.result.add": "Add Result",
              "pic.components.Investigations.results.content.none": "No result content",
              "pic.components.Investigations.results.message.none": "No results",
              "pic.components.Overview.communication.interlocutor.name": "Caller:",
              "pic.components.Overview.communication.spi.name": "SPI:",
              "pic.components.Patient.field.age": "Age",
              "pic.components.Patient.field.ageGroup": "Age Group",
              "pic.components.Patient.field.ageYears": "Age in Years",
              "pic.components.Patient.field.animalType": "Animal Type",
              "pic.components.Patient.field.circumstance": "Circumstance",
              "pic.components.Patient.field.location": "Location Type",
              "pic.components.Patient.field.macro": "Macro",
              "pic.components.Patient.field.macro.invalid": "This macro already exists.",
              "pic.components.Patient.field.macro.required": "A macro is required.",
              "pic.components.Patient.field.mrn": "Hospital MRN",
              "pic.components.Patient.field.name": "Patient Name",
              "pic.components.Patient.field.occupation": "Occupation",
              "pic.components.Patient.field.poisonseverityscore": "Poison Severity Score at time of Call",
              "pic.components.Patient.field.postcode": "Postcode of Exposure",
              "pic.components.Patient.field.pregnancy.lactating": "Lactating",
              "pic.components.Patient.field.pregnancy.status": "Pregnancy Status",
              "pic.components.Patient.field.pregnancy.trimester": "Trimester",
              "pic.components.Patient.field.riskassessment": "Risk Assessment",
              "pic.components.Patient.field.sex": "Biological Sex",
              "pic.components.Patient.field.topic": "Topic",
              "pic.components.Patient.field.weight": "Weight (kg)",
              "pic.components.Patient.section.exposure": "Exposure",
              "pic.components.Patient.section.riskassessment": "Poisoning Risk Assessment",
              "pic.components.TemplateList.action.template.delete": "Delete Template",
              "pic.components.TemplateList.action.template.edit": "Edit Template",
              "pic.components.TemplateList.messages.context.unavailable": "no actions available while editing",
              "pic.components.TemplateList.templates.none": "No Templates",
              "pic.components.Treatment.button.referral.add": "Add Referral",
              "pic.components.Treatment.button.treatment.add": "Add/Update Treatment",
              "pic.components.Treatment.field.disposition": "Disposition",
              "pic.components.Treatment.field.treatments": "Treatments",
              "pic.components.Treatment.label.referee": "Refer to Specialist",
              "pic.components.Treatment.label.referrals.none": "No Referrals",
              "pic.components.Treatment.label.specialty": "Specialty",
              "pic.components.Treatment.label.treatment.none": "No Treatments",
              "pic.components.Treatment.message.none": "No Treatments",
              "pic.components.Treatment.referrals": "Referrals",
              "pic.components.Treatment.treatment": "Treatment",
              "pic.components.Treatment.treatment.plural": "Treatments",
              "pic.containers.LoginPage.title": "Welcome to the Global Poisons Information Centre",
            },
            "now": [Function],
          }
    }
    isValidMacro={false}
    lookupMacroTemplate={[Function]}
    macro=""
    markAsCase={[Function]}
    markAsHoax={[Function]}
    markAsInquiry={[Function]}
    orgCountry=""
    patientAge=""
    patientAgeGroup=""
    patientAgeUnits=""
    patientAnimalType=""
    patientCategory=""
    patientCircumstance=""
    patientGeometry={Object {}}
    patientLocation=""
    patientName=""
    patientPoisonSeverityScore=""
    patientPostcode=""
    patientRiskAssessment=""
    patientSex=""
    patientSuburb=""
    patientWeight=""
    patientWeightUnits=""
    template={Object {}}
    topic=""
    type=""
    updateAgentDuration={[Function]}
    updateAgentDurationUnits={[Function]}
    updateAgentDurationUnknown={[Function]}
    updateAgentName={[Function]}
    updateAgentQuantity={[Function]}
    updateAgentQuantityUnits={[Function]}
    updateAgentQuantityUnknown={[Function]}
    updateAgentRouteOfExposure={[Function]}
    updateAgentTimeOfExposure={[Function]}
    updateAgentTypeOfExposure={[Function]}
    updateCaseTopic={[Function]}
    updateClinicalFeaturesDescriptorList={[Function]}
    updateInterlocutorAddress1={[Function]}
    updateInterlocutorCategory={[Function]}
    updateInterlocutorCity={[Function]}
    updateInterlocutorDirection={[Function]}
    updateInterlocutorMediumDetail={[Function]}
    updateInterlocutorName={[Function]}
    updateInterlocutorOrganisation={[Function]}
    updateInterlocutorPostcode={[Function]}
    updateInterlocutorState={[Function]}
    updateInterlocutorTelephone={[Function]}
    updatePatientAge={[Function]}
    updatePatientAnimalType={[Function]}
    updatePatientCategory={[Function]}
    updatePatientCircumstance={[Function]}
    updatePatientGeometry={[Function]}
    updatePatientLocality={[Function]}
    updatePatientLocation={[Function]}
    updatePatientName={[Function]}
    updatePatientPoisonSeverityScore={[Function]}
    updatePatientPostcode={[Function]}
    updatePatientRiskAssessment={[Function]}
    updatePatientSex={[Function]}
    updatePatientSuburb={[Function]}
    updatePatientWeight={[Function]}
    updateTemplateMacro={[Function]}
    userSPIFull={Object {}} />,
}
`;
